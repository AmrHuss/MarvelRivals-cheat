#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyBirthBase

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyBirthBase.PyBirthBase
// 0x00D8 (0x0818 - 0x0740)
class APyBirthBase final : public ABirthBase
{
public:
	int32                                         State;                                             // 0x0740(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBattleSide                                   BattleSide;                                        // 0x0744(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74C[0x4];                                      // 0x074C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABirthDoor*>                     BirthDoors;                                        // 0x0750(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         SRoomAudioAreaNo;                                  // 0x0760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TRoomAudioAreaNo;                                  // 0x0764(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SRoomBanAudioAreaNo;                               // 0x0768(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TRoomBanAudioAreaNo;                               // 0x076C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 BlockAbilityList;                                  // 0x0770(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class APyDoorV2*>                      DoorList;                                          // 0x0780(0x0010)(Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	float                                         CheckEnemyInterval;                                // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_794[0x4];                                      // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReplicateTimer                        SwitchTimer;                                       // 0x0798(0x0078)(BlueprintVisible, Net, NativeAccessSpecifierPublic)
	float                                         SwitchDurationTime;                                // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SwitchAbilityBuffID;                               // 0x0814(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void K2_OnReset();
	void RewindForReplayPy();
	void Activate();
	void SWITCH();
	void Deactivate();
	void DispatchOnActiveChanged(class UObject* TaskOwner, int64 Magnitude);
	void OnRep_State();
	void SwitchEnd();
	void OpenDoors();
	void CloseDoors();
	bool GetActive();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyBirthBase">();
	}
	static class APyBirthBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyBirthBase>();
	}
};
static_assert(alignof(APyBirthBase) == 0x000008, "Wrong alignment on APyBirthBase");
static_assert(sizeof(APyBirthBase) == 0x000818, "Wrong size on APyBirthBase");
static_assert(offsetof(APyBirthBase, State) == 0x000740, "Member 'APyBirthBase::State' has a wrong offset!");
static_assert(offsetof(APyBirthBase, BattleSide) == 0x000744, "Member 'APyBirthBase::BattleSide' has a wrong offset!");
static_assert(offsetof(APyBirthBase, Index_0) == 0x000748, "Member 'APyBirthBase::Index_0' has a wrong offset!");
static_assert(offsetof(APyBirthBase, BirthDoors) == 0x000750, "Member 'APyBirthBase::BirthDoors' has a wrong offset!");
static_assert(offsetof(APyBirthBase, SRoomAudioAreaNo) == 0x000760, "Member 'APyBirthBase::SRoomAudioAreaNo' has a wrong offset!");
static_assert(offsetof(APyBirthBase, TRoomAudioAreaNo) == 0x000764, "Member 'APyBirthBase::TRoomAudioAreaNo' has a wrong offset!");
static_assert(offsetof(APyBirthBase, SRoomBanAudioAreaNo) == 0x000768, "Member 'APyBirthBase::SRoomBanAudioAreaNo' has a wrong offset!");
static_assert(offsetof(APyBirthBase, TRoomBanAudioAreaNo) == 0x00076C, "Member 'APyBirthBase::TRoomBanAudioAreaNo' has a wrong offset!");
static_assert(offsetof(APyBirthBase, BlockAbilityList) == 0x000770, "Member 'APyBirthBase::BlockAbilityList' has a wrong offset!");
static_assert(offsetof(APyBirthBase, DoorList) == 0x000780, "Member 'APyBirthBase::DoorList' has a wrong offset!");
static_assert(offsetof(APyBirthBase, CheckEnemyInterval) == 0x000790, "Member 'APyBirthBase::CheckEnemyInterval' has a wrong offset!");
static_assert(offsetof(APyBirthBase, SwitchTimer) == 0x000798, "Member 'APyBirthBase::SwitchTimer' has a wrong offset!");
static_assert(offsetof(APyBirthBase, SwitchDurationTime) == 0x000810, "Member 'APyBirthBase::SwitchDurationTime' has a wrong offset!");
static_assert(offsetof(APyBirthBase, SwitchAbilityBuffID) == 0x000814, "Member 'APyBirthBase::SwitchAbilityBuffID' has a wrong offset!");

}


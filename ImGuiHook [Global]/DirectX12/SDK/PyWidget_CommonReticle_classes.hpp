#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_CommonReticle

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_CommonReticle.PyReticleManager
// 0x0000 (0x01B8 - 0x01B8)
class UPyReticleManager final : public UReticleManager
{
public:
	void SetCommonReticle(class UUserWidget* InReticle);
	void SetSpecialReticle(class UUserWidget* InReticle);
	void UpdateViewCharacterNextFrame(class AActor* InActor);
	struct FReticleStyle OverwriteReticleStyleByUserSetting(const struct FReticleStyle& InReticleStyle);
	void OnShapeChanged(int32 ShapeID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyReticleManager">();
	}
	static class UPyReticleManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyReticleManager>();
	}
};
static_assert(alignof(UPyReticleManager) == 0x000008, "Wrong alignment on UPyReticleManager");
static_assert(sizeof(UPyReticleManager) == 0x0001B8, "Wrong size on UPyReticleManager");

// PythonClass PyWidget_CommonReticle.PyWidget_CommonReticle
// 0x0010 (0x0530 - 0x0520)
class UPyWidget_CommonReticle : public UWidget_CommonReticle
{
public:
	float                                         MaxSpreadPixel;                                    // 0x0520(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsCommonReticle;                                   // 0x0524(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_525[0x3];                                      // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReloadOpacity;                                     // 0x0528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Construct();
	void SetSpread(float InDistance, float InSpread, float InRadius);
	void SetAccuType(ECommonReticleType InType);
	void SetAccumulateType(ECommonReticleType InType);
	void SetAccumulatingPercent(bool IsAccumulating, float InCurPercent, float Speed, bool IsShrinkAccumulate);
	void OnCharJump();
	void OnCharReloadBegin();
	void OnCharReloadEnd();
	void OnHitTarget(class AActor* InSourceAvatar, class AActor* InTargetAvatar, const struct FAttributeModifierHandle& ParameterHandle);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_CommonReticle">();
	}
	static class UPyWidget_CommonReticle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_CommonReticle>();
	}
};
static_assert(alignof(UPyWidget_CommonReticle) == 0x000008, "Wrong alignment on UPyWidget_CommonReticle");
static_assert(sizeof(UPyWidget_CommonReticle) == 0x000530, "Wrong size on UPyWidget_CommonReticle");
static_assert(offsetof(UPyWidget_CommonReticle, MaxSpreadPixel) == 0x000520, "Member 'UPyWidget_CommonReticle::MaxSpreadPixel' has a wrong offset!");
static_assert(offsetof(UPyWidget_CommonReticle, IsCommonReticle) == 0x000524, "Member 'UPyWidget_CommonReticle::IsCommonReticle' has a wrong offset!");
static_assert(offsetof(UPyWidget_CommonReticle, ReloadOpacity) == 0x000528, "Member 'UPyWidget_CommonReticle::ReloadOpacity' has a wrong offset!");

}


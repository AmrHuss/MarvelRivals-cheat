#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104561

#include "Basic.hpp"

#include "Hero_1045_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_104561.PyConfig_104561
// 0x0FC0 (0x1060 - 0x00A0)
class UPyConfig_104561 final : public UConfig_104561
{
public:
	struct FFindGroundParam                       SelectPointParm;                                   // 0x00A0(0x0F70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTag                           CueTag;                                            // 0x1010(0x000C)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_101C[0x4];                                     // 0x101C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraInterp*                          SelectingPointCameraInterp;                        // 0x1020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TaskCancelDelayEnd;                                // 0x1028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ProjectileWhaleID;                                 // 0x102C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AbsorbScopeID;                                     // 0x1030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1034[0x4];                                     // 0x1034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ProjectileStartOffset;                             // 0x1038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScopeWhaleID;                                      // 0x1050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_104561">();
	}
	static class UPyConfig_104561* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_104561>();
	}
};
static_assert(alignof(UPyConfig_104561) == 0x000010, "Wrong alignment on UPyConfig_104561");
static_assert(sizeof(UPyConfig_104561) == 0x001060, "Wrong size on UPyConfig_104561");
static_assert(offsetof(UPyConfig_104561, SelectPointParm) == 0x0000A0, "Member 'UPyConfig_104561::SelectPointParm' has a wrong offset!");
static_assert(offsetof(UPyConfig_104561, CueTag) == 0x001010, "Member 'UPyConfig_104561::CueTag' has a wrong offset!");
static_assert(offsetof(UPyConfig_104561, SelectingPointCameraInterp) == 0x001020, "Member 'UPyConfig_104561::SelectingPointCameraInterp' has a wrong offset!");
static_assert(offsetof(UPyConfig_104561, TaskCancelDelayEnd) == 0x001028, "Member 'UPyConfig_104561::TaskCancelDelayEnd' has a wrong offset!");
static_assert(offsetof(UPyConfig_104561, ProjectileWhaleID) == 0x00102C, "Member 'UPyConfig_104561::ProjectileWhaleID' has a wrong offset!");
static_assert(offsetof(UPyConfig_104561, AbsorbScopeID) == 0x001030, "Member 'UPyConfig_104561::AbsorbScopeID' has a wrong offset!");
static_assert(offsetof(UPyConfig_104561, ProjectileStartOffset) == 0x001038, "Member 'UPyConfig_104561::ProjectileStartOffset' has a wrong offset!");
static_assert(offsetof(UPyConfig_104561, ScopeWhaleID) == 0x001050, "Member 'UPyConfig_104561::ScopeWhaleID' has a wrong offset!");

// PythonClass PyAbility_104561.PyAbility_104561
// 0x0038 (0x2588 - 0x2550)
class UPyAbility_104561 : public UMarvelGameplayAbility
{
public:
	struct FVector                                TargetLocation;                                    // 0x2550(0x0018)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAbilityConfirm;                                  // 0x2568(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAbilityTaskCancel;                               // 0x2578(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnAbilityConfirm__DelegateSignature();
	void OnAbilityTaskCancel__DelegateSignature();
	void BeginPlay();
	void K2_ActivateAbility();
	void OnWaitTaskConfirm(const struct FGameplayAbilityTargetDataHandle& Data);
	void OnWaitTaskCancel(const struct FGameplayAbilityTargetDataHandle& Data);
	void MissileEventNotify();
	void NativeOnMontageCompleted(const class FString& Tag);
	void BreakEventNotify();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_104561">();
	}
	static class UPyAbility_104561* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_104561>();
	}
};
static_assert(alignof(UPyAbility_104561) == 0x000008, "Wrong alignment on UPyAbility_104561");
static_assert(sizeof(UPyAbility_104561) == 0x002588, "Wrong size on UPyAbility_104561");
static_assert(offsetof(UPyAbility_104561, TargetLocation) == 0x002550, "Member 'UPyAbility_104561::TargetLocation' has a wrong offset!");
static_assert(offsetof(UPyAbility_104561, OnAbilityConfirm) == 0x002568, "Member 'UPyAbility_104561::OnAbilityConfirm' has a wrong offset!");
static_assert(offsetof(UPyAbility_104561, OnAbilityTaskCancel) == 0x002578, "Member 'UPyAbility_104561::OnAbilityTaskCancel' has a wrong offset!");

// PythonClass PyAbility_104561.PyProjectile_10456101
// 0x0000 (0x2F60 - 0x2F60)
class APyProjectile_10456101 final : public AMarvelAbilityTargetActor_Projectile
{
public:
	void K2_OnBeginAgentTask();
	void K2_OnInitializeData();
	void K2_OnEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyProjectile_10456101">();
	}
	static class APyProjectile_10456101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyProjectile_10456101>();
	}
};
static_assert(alignof(APyProjectile_10456101) == 0x000010, "Wrong alignment on APyProjectile_10456101");
static_assert(sizeof(APyProjectile_10456101) == 0x002F60, "Wrong size on APyProjectile_10456101");

// PythonClass PyAbility_104561.PyCue_ProjectileLoop_10456101
// 0x0030 (0x0D90 - 0x0D60)
class APyCue_ProjectileLoop_10456101 final : public AMarvelCueNotify_Projectile
{
public:
	class USkeletalMeshComponent*                 WhaleMesh;                                         // 0x0D60(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WhaleEndTime;                                      // 0x0D68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D6C[0x4];                                      // 0x0D6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         ReleaseFXAsset;                                    // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         ImpactFXAsset;                                     // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DelaySpawnImpactTime;                              // 0x0D80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ImpactAudioID;                                     // 0x0D84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         ImpactCameraShake;                                 // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void WhileActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnActiveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnExecuteAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_ProjectileLoop_10456101">();
	}
	static class APyCue_ProjectileLoop_10456101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_ProjectileLoop_10456101>();
	}
};
static_assert(alignof(APyCue_ProjectileLoop_10456101) == 0x000008, "Wrong alignment on APyCue_ProjectileLoop_10456101");
static_assert(sizeof(APyCue_ProjectileLoop_10456101) == 0x000D90, "Wrong size on APyCue_ProjectileLoop_10456101");
static_assert(offsetof(APyCue_ProjectileLoop_10456101, WhaleMesh) == 0x000D60, "Member 'APyCue_ProjectileLoop_10456101::WhaleMesh' has a wrong offset!");
static_assert(offsetof(APyCue_ProjectileLoop_10456101, WhaleEndTime) == 0x000D68, "Member 'APyCue_ProjectileLoop_10456101::WhaleEndTime' has a wrong offset!");
static_assert(offsetof(APyCue_ProjectileLoop_10456101, ReleaseFXAsset) == 0x000D70, "Member 'APyCue_ProjectileLoop_10456101::ReleaseFXAsset' has a wrong offset!");
static_assert(offsetof(APyCue_ProjectileLoop_10456101, ImpactFXAsset) == 0x000D78, "Member 'APyCue_ProjectileLoop_10456101::ImpactFXAsset' has a wrong offset!");
static_assert(offsetof(APyCue_ProjectileLoop_10456101, DelaySpawnImpactTime) == 0x000D80, "Member 'APyCue_ProjectileLoop_10456101::DelaySpawnImpactTime' has a wrong offset!");
static_assert(offsetof(APyCue_ProjectileLoop_10456101, ImpactAudioID) == 0x000D84, "Member 'APyCue_ProjectileLoop_10456101::ImpactAudioID' has a wrong offset!");
static_assert(offsetof(APyCue_ProjectileLoop_10456101, ImpactCameraShake) == 0x000D88, "Member 'APyCue_ProjectileLoop_10456101::ImpactCameraShake' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HeroSkill_Weapon

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_HeroSkill_Weapon.WBP_HeroSkill_Weapon_C.ExecuteUbergraph_WBP_HeroSkill_Weapon
// 0x0078 (0x0078 - 0x0000)
struct WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsClicked;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Name;                                 // 0x0010(0x0018)()
	class FText                                   K2Node_Event_Desc;                                 // 0x0028(0x0018)()
	TSoftObjectPtr<class UTexture2D>              K2Node_Event_Icon;                                 // 0x0040(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	EAbilityInputBinds                            K2Node_Event_InptuAction;                          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon) == 0x000008, "Wrong alignment on WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon");
static_assert(sizeof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon) == 0x000078, "Wrong size on WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, EntryPoint) == 0x000000, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, Temp_bool_Variable) == 0x000004, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, Temp_byte_Variable) == 0x000005, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, K2Node_CustomEvent_IsClicked) == 0x000007, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::K2Node_CustomEvent_IsClicked' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, K2Node_Select_Default) == 0x000008, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, K2Node_Event_IsDesignTime) == 0x000009, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, K2Node_Event_Name) == 0x000010, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, K2Node_Event_Desc) == 0x000028, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::K2Node_Event_Desc' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, K2Node_Event_Icon) == 0x000040, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::K2Node_Event_Icon' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon, K2Node_Event_InptuAction) == 0x000070, "Member 'WBP_HeroSkill_Weapon_C_ExecuteUbergraph_WBP_HeroSkill_Weapon::K2Node_Event_InptuAction' has a wrong offset!");

// Function WBP_HeroSkill_Weapon.WBP_HeroSkill_Weapon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroSkill_Weapon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroSkill_Weapon_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_HeroSkill_Weapon_C_PreConstruct");
static_assert(sizeof(WBP_HeroSkill_Weapon_C_PreConstruct) == 0x000001, "Wrong size on WBP_HeroSkill_Weapon_C_PreConstruct");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_HeroSkill_Weapon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_HeroSkill_Weapon.WBP_HeroSkill_Weapon_C.SetAbilityData
// 0x0068 (0x0068 - 0x0000)
struct WBP_HeroSkill_Weapon_C_SetAbilityData final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Desc;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, UObjectWrapper, HasGetValueTypeHash)
	EAbilityInputBinds                            InptuAction;                                       // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroSkill_Weapon_C_SetAbilityData) == 0x000008, "Wrong alignment on WBP_HeroSkill_Weapon_C_SetAbilityData");
static_assert(sizeof(WBP_HeroSkill_Weapon_C_SetAbilityData) == 0x000068, "Wrong size on WBP_HeroSkill_Weapon_C_SetAbilityData");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_SetAbilityData, Name_0) == 0x000000, "Member 'WBP_HeroSkill_Weapon_C_SetAbilityData::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_SetAbilityData, Desc) == 0x000018, "Member 'WBP_HeroSkill_Weapon_C_SetAbilityData::Desc' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_SetAbilityData, Icon) == 0x000030, "Member 'WBP_HeroSkill_Weapon_C_SetAbilityData::Icon' has a wrong offset!");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_SetAbilityData, InptuAction) == 0x000060, "Member 'WBP_HeroSkill_Weapon_C_SetAbilityData::InptuAction' has a wrong offset!");

// Function WBP_HeroSkill_Weapon.WBP_HeroSkill_Weapon_C.SetIsClicked
// 0x0001 (0x0001 - 0x0000)
struct WBP_HeroSkill_Weapon_C_SetIsClicked final
{
public:
	bool                                          IsClicked_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HeroSkill_Weapon_C_SetIsClicked) == 0x000001, "Wrong alignment on WBP_HeroSkill_Weapon_C_SetIsClicked");
static_assert(sizeof(WBP_HeroSkill_Weapon_C_SetIsClicked) == 0x000001, "Wrong size on WBP_HeroSkill_Weapon_C_SetIsClicked");
static_assert(offsetof(WBP_HeroSkill_Weapon_C_SetIsClicked, IsClicked_0) == 0x000000, "Member 'WBP_HeroSkill_Weapon_C_SetIsClicked::IsClicked_0' has a wrong offset!");

}


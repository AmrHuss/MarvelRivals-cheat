#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_BattlePass_PropView

#include "Basic.hpp"

#include "PyWidget_Common_Button_classes.hpp"
#include "PyMarvelUserWidget_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "PyWidget_ModuleMainPanel_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// PythonClass PyWidget_BattlePass_PropView.PyWidget_BattlePass_PageItem
// 0x0000 (0x08E0 - 0x08E0)
#pragma pack(push, 0x1)
class alignas(0x10) UPyWidget_BattlePass_PageItem : public UPyWidget_BaseCommonButton
{
public:
	void SetIsHover(bool IsHover_0);
	void SetBtnIsPressed(bool IsBtnPressed_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_BattlePass_PageItem">();
	}
	static class UPyWidget_BattlePass_PageItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_BattlePass_PageItem>();
	}
};
#pragma pack(pop)
static_assert(alignof(UPyWidget_BattlePass_PageItem) == 0x000010, "Wrong alignment on UPyWidget_BattlePass_PageItem");
static_assert(sizeof(UPyWidget_BattlePass_PageItem) == 0x0008E0, "Wrong size on UPyWidget_BattlePass_PageItem");

// PythonClass PyWidget_BattlePass_PropView.PyWidget_BattlePass_CuttingItemPrice
// 0x0000 (0x05E8 - 0x05E8)
class UPyWidget_BattlePass_CuttingItemPrice : public UPyMarvelUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_BattlePass_CuttingItemPrice">();
	}
	static class UPyWidget_BattlePass_CuttingItemPrice* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_BattlePass_CuttingItemPrice>();
	}
};
static_assert(alignof(UPyWidget_BattlePass_CuttingItemPrice) == 0x000008, "Wrong alignment on UPyWidget_BattlePass_CuttingItemPrice");
static_assert(sizeof(UPyWidget_BattlePass_CuttingItemPrice) == 0x0005E8, "Wrong size on UPyWidget_BattlePass_CuttingItemPrice");

// PythonClass PyWidget_BattlePass_PropView.PyWidget_BattlePass_CuttingItem
// 0x0300 (0x0BE0 - 0x08E0)
#pragma pack(push, 0x1)
class alignas(0x10) UPyWidget_BattlePass_CuttingItem : public UPyWidget_BaseCommonButton
{
public:
	uint8                                         Pad_8D8[0x8];                                      // 0x08D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelBattlePassCuttingItemStyle      ItemStyle;                                         // 0x08E0(0x02F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UUserWidget*                            WBP_Common_ImageMaskCut_Vx;                        // 0x0BD0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void Destruct();
	void SetIsHover(bool IsHover_0);
	void OnImgMaskLoaded(class UObject* ImgMask);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_BattlePass_CuttingItem">();
	}
	static class UPyWidget_BattlePass_CuttingItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_BattlePass_CuttingItem>();
	}
};
#pragma pack(pop)
static_assert(alignof(UPyWidget_BattlePass_CuttingItem) == 0x000010, "Wrong alignment on UPyWidget_BattlePass_CuttingItem");
static_assert(sizeof(UPyWidget_BattlePass_CuttingItem) == 0x000BE0, "Wrong size on UPyWidget_BattlePass_CuttingItem");
static_assert(offsetof(UPyWidget_BattlePass_CuttingItem, ItemStyle) == 0x0008E0, "Member 'UPyWidget_BattlePass_CuttingItem::ItemStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_CuttingItem, WBP_Common_ImageMaskCut_Vx) == 0x000BD0, "Member 'UPyWidget_BattlePass_CuttingItem::WBP_Common_ImageMaskCut_Vx' has a wrong offset!");

// PythonClass PyWidget_BattlePass_PropView.PyWidget_BattlePass_CuttingItemList
// 0x0028 (0x0610 - 0x05E8)
class UPyWidget_BattlePass_CuttingItemList : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMarvelBattlePassCuttingItemStyle> ItemStyleList;                                     // 0x05E8(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<int32>                                 ItemFocusConfigList;                               // 0x05F8(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         PrePageBtnFocusItemIndex;                          // 0x0608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NextPageBtnFocusItemIndex;                         // 0x060C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void MarvelSetVisible(bool Visible);
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_BattlePass_CuttingItemList">();
	}
	static class UPyWidget_BattlePass_CuttingItemList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_BattlePass_CuttingItemList>();
	}
};
static_assert(alignof(UPyWidget_BattlePass_CuttingItemList) == 0x000008, "Wrong alignment on UPyWidget_BattlePass_CuttingItemList");
static_assert(sizeof(UPyWidget_BattlePass_CuttingItemList) == 0x000610, "Wrong size on UPyWidget_BattlePass_CuttingItemList");
static_assert(offsetof(UPyWidget_BattlePass_CuttingItemList, ItemStyleList) == 0x0005E8, "Member 'UPyWidget_BattlePass_CuttingItemList::ItemStyleList' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_CuttingItemList, ItemFocusConfigList) == 0x0005F8, "Member 'UPyWidget_BattlePass_CuttingItemList::ItemFocusConfigList' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_CuttingItemList, PrePageBtnFocusItemIndex) == 0x000608, "Member 'UPyWidget_BattlePass_CuttingItemList::PrePageBtnFocusItemIndex' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_CuttingItemList, NextPageBtnFocusItemIndex) == 0x00060C, "Member 'UPyWidget_BattlePass_CuttingItemList::NextPageBtnFocusItemIndex' has a wrong offset!");

// PythonClass PyWidget_BattlePass_PropView.PyWidget_BattlePass_Confirm_Popup
// 0x00D8 (0x06C0 - 0x05E8)
class UPyWidget_BattlePass_Confirm_Popup : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ViewItemTime;                                      // 0x05E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPyWidget_CommonItem_ItemData*>  ViewItemList;                                      // 0x05E8(0x0010)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FUIActionData                          ConfirmHotKey;                                     // 0x05F8(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FUIActionData                          CancelHotKey;                                      // 0x0650(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UInputAction*                           CloseInputAction;                                  // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnConfirmPopupAnimFinish;                          // 0x06B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnConfirmPopupAnimFinish__DelegateSignature(const class FString& Anim_name);
	void OnInitialized();
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_BattlePass_Confirm_Popup">();
	}
	static class UPyWidget_BattlePass_Confirm_Popup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_BattlePass_Confirm_Popup>();
	}
};
static_assert(alignof(UPyWidget_BattlePass_Confirm_Popup) == 0x000008, "Wrong alignment on UPyWidget_BattlePass_Confirm_Popup");
static_assert(sizeof(UPyWidget_BattlePass_Confirm_Popup) == 0x0006C0, "Wrong size on UPyWidget_BattlePass_Confirm_Popup");
static_assert(offsetof(UPyWidget_BattlePass_Confirm_Popup, ViewItemTime) == 0x0005E4, "Member 'UPyWidget_BattlePass_Confirm_Popup::ViewItemTime' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Confirm_Popup, ViewItemList) == 0x0005E8, "Member 'UPyWidget_BattlePass_Confirm_Popup::ViewItemList' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Confirm_Popup, ConfirmHotKey) == 0x0005F8, "Member 'UPyWidget_BattlePass_Confirm_Popup::ConfirmHotKey' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Confirm_Popup, CancelHotKey) == 0x000650, "Member 'UPyWidget_BattlePass_Confirm_Popup::CancelHotKey' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Confirm_Popup, CloseInputAction) == 0x0006A8, "Member 'UPyWidget_BattlePass_Confirm_Popup::CloseInputAction' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Confirm_Popup, OnConfirmPopupAnimFinish) == 0x0006B0, "Member 'UPyWidget_BattlePass_Confirm_Popup::OnConfirmPopupAnimFinish' has a wrong offset!");

// PythonClass PyWidget_BattlePass_PropView.PyWidget_BattlePass_PropView
// 0x0280 (0x0890 - 0x0610)
class UPyWidget_BattlePass_PropView : public UPyWidget_ModuleMainPanel
{
public:
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuideTipsStyle>                AppreciationReturnTipsStyle;                       // 0x0610(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGuideTipsStyle>                SwitchPageTipsStyle;                               // 0x0620(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGuideTipsStyle>                AppreciationTipsStyle;                             // 0x0630(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGuideTipsStyle>                SwitchTipsStyle;                                   // 0x0640(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGuideTipsStyle>                RotationTipsStyle;                                 // 0x0650(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGuideTipsStyle>                RotationItemStyle;                                 // 0x0660(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGuideTipsStyle>                ViewMenuTipsStyle;                                 // 0x0670(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGuideTipsStyle>                ConfirmReturnTipsStyle;                            // 0x0680(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FGuideTipsStyle>                ItemContinuteStyle;                                // 0x0690(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                         ChangePageStep;                                    // 0x06A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ItemNormalColor;                                   // 0x06A4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ItemActiveColor;                                   // 0x06B4(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConfirmPopupFadeInTime;                            // 0x06C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPyDataAsset_BattlePass*                BattlePassDataAsset;                               // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ConfirmPopupOffsetY;                               // 0x06D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D4[0x4];                                      // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIActionData                          BtnBuyHotKey1;                                     // 0x06D8(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FUIActionData                          BtnBuyHotKey2;                                     // 0x0730(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FUIActionData                          BtnBuyHotKey3;                                     // 0x0788(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FUIActionData                          BtnBuyHotKey4;                                     // 0x07E0(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FUIActionData                          BtnNorHotKey;                                      // 0x0838(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void MarvelSetVisible(bool Visible);
	class UWidget* OnNavLeft_Confirm_Popup(EUINavigation Navigation_0);
	class UWidget* OnNavRight_Confirm_Popup(EUINavigation Navigation_0);
	class UWidget* OnNavBtnHome(EUINavigation Navigation_0);
	class UWidget* OnNavBtnPre(EUINavigation Navigation_0);
	class UWidget* OnNavBtnNext(EUINavigation Navigation_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_BattlePass_PropView">();
	}
	static class UPyWidget_BattlePass_PropView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_BattlePass_PropView>();
	}
};
static_assert(alignof(UPyWidget_BattlePass_PropView) == 0x000008, "Wrong alignment on UPyWidget_BattlePass_PropView");
static_assert(sizeof(UPyWidget_BattlePass_PropView) == 0x000890, "Wrong size on UPyWidget_BattlePass_PropView");
static_assert(offsetof(UPyWidget_BattlePass_PropView, AppreciationReturnTipsStyle) == 0x000610, "Member 'UPyWidget_BattlePass_PropView::AppreciationReturnTipsStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, SwitchPageTipsStyle) == 0x000620, "Member 'UPyWidget_BattlePass_PropView::SwitchPageTipsStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, AppreciationTipsStyle) == 0x000630, "Member 'UPyWidget_BattlePass_PropView::AppreciationTipsStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, SwitchTipsStyle) == 0x000640, "Member 'UPyWidget_BattlePass_PropView::SwitchTipsStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, RotationTipsStyle) == 0x000650, "Member 'UPyWidget_BattlePass_PropView::RotationTipsStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, RotationItemStyle) == 0x000660, "Member 'UPyWidget_BattlePass_PropView::RotationItemStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, ViewMenuTipsStyle) == 0x000670, "Member 'UPyWidget_BattlePass_PropView::ViewMenuTipsStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, ConfirmReturnTipsStyle) == 0x000680, "Member 'UPyWidget_BattlePass_PropView::ConfirmReturnTipsStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, ItemContinuteStyle) == 0x000690, "Member 'UPyWidget_BattlePass_PropView::ItemContinuteStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, ChangePageStep) == 0x0006A0, "Member 'UPyWidget_BattlePass_PropView::ChangePageStep' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, ItemNormalColor) == 0x0006A4, "Member 'UPyWidget_BattlePass_PropView::ItemNormalColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, ItemActiveColor) == 0x0006B4, "Member 'UPyWidget_BattlePass_PropView::ItemActiveColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, ConfirmPopupFadeInTime) == 0x0006C4, "Member 'UPyWidget_BattlePass_PropView::ConfirmPopupFadeInTime' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, BattlePassDataAsset) == 0x0006C8, "Member 'UPyWidget_BattlePass_PropView::BattlePassDataAsset' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, ConfirmPopupOffsetY) == 0x0006D0, "Member 'UPyWidget_BattlePass_PropView::ConfirmPopupOffsetY' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, BtnBuyHotKey1) == 0x0006D8, "Member 'UPyWidget_BattlePass_PropView::BtnBuyHotKey1' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, BtnBuyHotKey2) == 0x000730, "Member 'UPyWidget_BattlePass_PropView::BtnBuyHotKey2' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, BtnBuyHotKey3) == 0x000788, "Member 'UPyWidget_BattlePass_PropView::BtnBuyHotKey3' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, BtnBuyHotKey4) == 0x0007E0, "Member 'UPyWidget_BattlePass_PropView::BtnBuyHotKey4' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_PropView, BtnNorHotKey) == 0x000838, "Member 'UPyWidget_BattlePass_PropView::BtnNorHotKey' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101461

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Hero_1014_structs.hpp"
#include "Hero_1014_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "DeclarativeUnreal_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_101461.PyConfig_101461
// 0x0F80 (0x20C0 - 0x1140)
class UPyConfig_101461 final : public UConfig_101461
{
public:
	struct FGameplayTag                           FireNeedTag;                                       // 0x1140(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SummonerId;                                        // 0x114C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TurretHeight;                                      // 0x1150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurretDistance;                                    // 0x1154(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TurretRadius;                                      // 0x1158(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_115C[0x4];                                     // 0x115C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMarvelAbilityTraceContext             GroundTraceContext;                                // 0x1160(0x0F30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FShootModeSensitivityParam             SensitivityParam;                                  // 0x2090(0x0024)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_101461">();
	}
	static class UPyConfig_101461* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_101461>();
	}
};
static_assert(alignof(UPyConfig_101461) == 0x000010, "Wrong alignment on UPyConfig_101461");
static_assert(sizeof(UPyConfig_101461) == 0x0020C0, "Wrong size on UPyConfig_101461");
static_assert(offsetof(UPyConfig_101461, FireNeedTag) == 0x001140, "Member 'UPyConfig_101461::FireNeedTag' has a wrong offset!");
static_assert(offsetof(UPyConfig_101461, SummonerId) == 0x00114C, "Member 'UPyConfig_101461::SummonerId' has a wrong offset!");
static_assert(offsetof(UPyConfig_101461, TurretHeight) == 0x001150, "Member 'UPyConfig_101461::TurretHeight' has a wrong offset!");
static_assert(offsetof(UPyConfig_101461, TurretDistance) == 0x001154, "Member 'UPyConfig_101461::TurretDistance' has a wrong offset!");
static_assert(offsetof(UPyConfig_101461, TurretRadius) == 0x001158, "Member 'UPyConfig_101461::TurretRadius' has a wrong offset!");
static_assert(offsetof(UPyConfig_101461, GroundTraceContext) == 0x001160, "Member 'UPyConfig_101461::GroundTraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_101461, SensitivityParam) == 0x002090, "Member 'UPyConfig_101461::SensitivityParam' has a wrong offset!");

// PythonClass PyAbility_101461.PyUIController_101461
// 0x0000 (0x0C58 - 0x0C58)
class UPyUIController_101461 final : public UUIC_Ability
{
public:
	void OnInit();
	void OnDestruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_101461">();
	}
	static class UPyUIController_101461* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_101461>();
	}
};
static_assert(alignof(UPyUIController_101461) == 0x000008, "Wrong alignment on UPyUIController_101461");
static_assert(sizeof(UPyUIController_101461) == 0x000C58, "Wrong size on UPyUIController_101461");

// PythonClass PyAbility_101461.PySummoner_101461
// 0x0010 (0x0A20 - 0x0A10)
class APySummoner_101461 : public ASummoned_10146101
{
public:
	FMulticastInlineDelegateProperty_             OnTurretGetOutStart;                               // 0x0A10(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnTurretGetOutStart__DelegateSignature();
	void K2_OnBeginAgentTask();
	void K2_OnEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummoner_101461">();
	}
	static class APySummoner_101461* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummoner_101461>();
	}
};
static_assert(alignof(APySummoner_101461) == 0x000010, "Wrong alignment on APySummoner_101461");
static_assert(sizeof(APySummoner_101461) == 0x000A20, "Wrong size on APySummoner_101461");
static_assert(offsetof(APySummoner_101461, OnTurretGetOutStart) == 0x000A10, "Member 'APySummoner_101461::OnTurretGetOutStart' has a wrong offset!");

// PythonClass PyAbility_101461.PyAbility_101461
// 0x0018 (0x2568 - 0x2550)
class UPyAbility_101461 : public UMarvelGameplayAbility
{
public:
	int32                                         CurTurretState;                                    // 0x2550(0x0004)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DistanceThreshole;                                 // 0x2554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             TurretStateDispatcher;                             // 0x2558(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void TurretStateDispatcher__DelegateSignature(bool InTurret);
	void BeginPlay();
	bool CanActivate();
	bool TryMakeTriggerContext(struct FGameplayEventData& EventData);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void NativeOnMontageEvent(const class FString& Tag);
	void NativeOnSimulatedMontageEvent(const class FString& Tag);
	void MissileEventNotify();
	void OnShootModeChanged();
	void BreakEventNotify();
	void NativeOnMontageCompleted(const class FString& Tag);
	void K2_OnEndAbility(bool Cancel);
	bool IsInTurret();
	void SetTurretState(int32 State);
	void MulticastSpawnTurretPrinter(const struct FVector& Target_loc);
	void RemoveTurretPrinter();
	void UnEquipOtherWeapon();
	void EquipOtherWeapon();
	void OnTurretEndTask(class AActor* Turret);
	void OnTurretDeath();
	void OnTurretNotEnoughAmmo();
	void OnPressTryGetOutTurret(float TimeWaited);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_101461">();
	}
	static class UPyAbility_101461* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_101461>();
	}
};
static_assert(alignof(UPyAbility_101461) == 0x000008, "Wrong alignment on UPyAbility_101461");
static_assert(sizeof(UPyAbility_101461) == 0x002568, "Wrong size on UPyAbility_101461");
static_assert(offsetof(UPyAbility_101461, CurTurretState) == 0x002550, "Member 'UPyAbility_101461::CurTurretState' has a wrong offset!");
static_assert(offsetof(UPyAbility_101461, DistanceThreshole) == 0x002554, "Member 'UPyAbility_101461::DistanceThreshole' has a wrong offset!");
static_assert(offsetof(UPyAbility_101461, TurretStateDispatcher) == 0x002558, "Member 'UPyAbility_101461::TurretStateDispatcher' has a wrong offset!");

// PythonClass PyAbility_101461.PyCue_SummonerLoop_10146101
// 0x0050 (0x0E80 - 0x0E30)
class APyCue_SummonerLoop_10146101 final : public AMarvelCueNotify_Summoned
{
public:
	float                                         BulletDropAudioDelay;                              // 0x0E30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E34[0x4];                                      // 0x0E34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Sockets;                                           // 0x0E38(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FDeclarationHolder                     ViewTargetWatcher;                                 // 0x0E48(0x0010)(BlueprintVisible, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         MuzzuleEffect;                                     // 0x0E58(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULegacyCameraShake>         ShakeClass;                                        // 0x0E60(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CFireAudioId;                                      // 0x0E68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CFireStartAudioId;                                 // 0x0E6C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CFireEndAudioId;                                   // 0x0E70(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartRotAudioID;                                   // 0x0E74(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RotAudioID;                                        // 0x0E78(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BulletAudioID;                                     // 0x0E7C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnAmmoChanged();
	void OnAmmoChangedFunc();
	void AudioControl(ERotateAudioControl RotateAudioControl);
	void OnWeaponCueFired(int32 ModeIndex);
	void OnWeaponCueFireStateChanged(int32 ModeIndex, bool bNewState);
	void PostBulletAudio();
	void AfterEquipWeapon(class AShootingWeapon* Weapon, const struct FMarvelEquipmentTable& WeaponInfo, bool bState);
	void OnTurretEndTask(class AActor* Turret);
	void OnTurretDeath();
	void OnGetOutStart();
	void OnGetOutComplete();
	void OnViewTargetChange(class AActor* ViewTarget);
	void OnUpdateTurretMesh(bool bShow1P);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_SummonerLoop_10146101">();
	}
	static class APyCue_SummonerLoop_10146101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_SummonerLoop_10146101>();
	}
};
static_assert(alignof(APyCue_SummonerLoop_10146101) == 0x000008, "Wrong alignment on APyCue_SummonerLoop_10146101");
static_assert(sizeof(APyCue_SummonerLoop_10146101) == 0x000E80, "Wrong size on APyCue_SummonerLoop_10146101");
static_assert(offsetof(APyCue_SummonerLoop_10146101, BulletDropAudioDelay) == 0x000E30, "Member 'APyCue_SummonerLoop_10146101::BulletDropAudioDelay' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, Sockets) == 0x000E38, "Member 'APyCue_SummonerLoop_10146101::Sockets' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, ViewTargetWatcher) == 0x000E48, "Member 'APyCue_SummonerLoop_10146101::ViewTargetWatcher' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, MuzzuleEffect) == 0x000E58, "Member 'APyCue_SummonerLoop_10146101::MuzzuleEffect' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, ShakeClass) == 0x000E60, "Member 'APyCue_SummonerLoop_10146101::ShakeClass' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, CFireAudioId) == 0x000E68, "Member 'APyCue_SummonerLoop_10146101::CFireAudioId' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, CFireStartAudioId) == 0x000E6C, "Member 'APyCue_SummonerLoop_10146101::CFireStartAudioId' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, CFireEndAudioId) == 0x000E70, "Member 'APyCue_SummonerLoop_10146101::CFireEndAudioId' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, StartRotAudioID) == 0x000E74, "Member 'APyCue_SummonerLoop_10146101::StartRotAudioID' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, RotAudioID) == 0x000E78, "Member 'APyCue_SummonerLoop_10146101::RotAudioID' has a wrong offset!");
static_assert(offsetof(APyCue_SummonerLoop_10146101, BulletAudioID) == 0x000E7C, "Member 'APyCue_SummonerLoop_10146101::BulletAudioID' has a wrong offset!");

// PythonClass PyAbility_101461.PyCue_Projectile_HitImpact_10146101
// 0x0000 (0x04D0 - 0x04D0)
class UPyCue_Projectile_HitImpact_10146101 final : public UMarvelCueNotify_HitImpact
{
public:
	void OnNiagaraSpawned(class UNiagaraComponent* InFXComponent, class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Projectile_HitImpact_10146101">();
	}
	static class UPyCue_Projectile_HitImpact_10146101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyCue_Projectile_HitImpact_10146101>();
	}
};
static_assert(alignof(UPyCue_Projectile_HitImpact_10146101) == 0x000008, "Wrong alignment on UPyCue_Projectile_HitImpact_10146101");
static_assert(sizeof(UPyCue_Projectile_HitImpact_10146101) == 0x0004D0, "Wrong size on UPyCue_Projectile_HitImpact_10146101");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104241

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Hero_1042_structs.hpp"
#include "Hero_1042_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_104241.PyConfig_104241
// 0x2E40 (0x2F00 - 0x00C0)
class UPyConfig_104241 final : public UConfig_PeniParkerExlosiveSpider
{
public:
	int32                                         NestSummonedId;                                    // 0x00C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpiderSummonedId;                                  // 0x00C4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WebSummonedId;                                     // 0x00C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InVincibleBuffId;                                  // 0x00CC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMarvelAbilityTraceContext             ThrowTraceContext;                                 // 0x00D0(0x0F30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMarvelAbilityTraceContext             SummonedValidSpaceTraceParam;                      // 0x1000(0x0F30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                         ProjectileSpeed;                                   // 0x1F30(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProjectileGravityScale;                            // 0x1F34(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpreadValidDegree;                                 // 0x1F38(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxToleranceShirnkTime;                            // 0x1F3C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseIntervalTime;                               // 0x1F40(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReleaseSpiderCount;                                // 0x1F44(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReleaseSpiderOffset;                               // 0x1F48(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxIndicatingRange;                                // 0x1F60(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseWebTime;                                    // 0x1F64(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpreadTotalTime;                                   // 0x1F68(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseTotalTime;                                  // 0x1F6C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseTime;                                       // 0x1F70(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F74[0xC];                                     // 0x1F74(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFindGroundParam                       TargetTraceParam;                                  // 0x1F80(0x0F70)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                           TraceActorCueTag;                                  // 0x2EF0(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_104241">();
	}
	static class UPyConfig_104241* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_104241>();
	}
};
static_assert(alignof(UPyConfig_104241) == 0x000010, "Wrong alignment on UPyConfig_104241");
static_assert(sizeof(UPyConfig_104241) == 0x002F00, "Wrong size on UPyConfig_104241");
static_assert(offsetof(UPyConfig_104241, NestSummonedId) == 0x0000C0, "Member 'UPyConfig_104241::NestSummonedId' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, SpiderSummonedId) == 0x0000C4, "Member 'UPyConfig_104241::SpiderSummonedId' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, WebSummonedId) == 0x0000C8, "Member 'UPyConfig_104241::WebSummonedId' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, InVincibleBuffId) == 0x0000CC, "Member 'UPyConfig_104241::InVincibleBuffId' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ThrowTraceContext) == 0x0000D0, "Member 'UPyConfig_104241::ThrowTraceContext' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, SummonedValidSpaceTraceParam) == 0x001000, "Member 'UPyConfig_104241::SummonedValidSpaceTraceParam' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ProjectileSpeed) == 0x001F30, "Member 'UPyConfig_104241::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ProjectileGravityScale) == 0x001F34, "Member 'UPyConfig_104241::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, SpreadValidDegree) == 0x001F38, "Member 'UPyConfig_104241::SpreadValidDegree' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, MaxToleranceShirnkTime) == 0x001F3C, "Member 'UPyConfig_104241::MaxToleranceShirnkTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ReleaseIntervalTime) == 0x001F40, "Member 'UPyConfig_104241::ReleaseIntervalTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ReleaseSpiderCount) == 0x001F44, "Member 'UPyConfig_104241::ReleaseSpiderCount' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ReleaseSpiderOffset) == 0x001F48, "Member 'UPyConfig_104241::ReleaseSpiderOffset' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, MaxIndicatingRange) == 0x001F60, "Member 'UPyConfig_104241::MaxIndicatingRange' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ReleaseWebTime) == 0x001F64, "Member 'UPyConfig_104241::ReleaseWebTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, SpreadTotalTime) == 0x001F68, "Member 'UPyConfig_104241::SpreadTotalTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ReleaseTotalTime) == 0x001F6C, "Member 'UPyConfig_104241::ReleaseTotalTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, ReleaseTime) == 0x001F70, "Member 'UPyConfig_104241::ReleaseTime' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, TargetTraceParam) == 0x001F80, "Member 'UPyConfig_104241::TargetTraceParam' has a wrong offset!");
static_assert(offsetof(UPyConfig_104241, TraceActorCueTag) == 0x002EF0, "Member 'UPyConfig_104241::TraceActorCueTag' has a wrong offset!");

// PythonClass PyAbility_104241.PyExplosiveSpiderMeshComponent
// 0x0000 (0x0A70 - 0x0A70)
class UPyExplosiveSpiderMeshComponent final : public UInstancedStaticMeshComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyExplosiveSpiderMeshComponent">();
	}
	static class UPyExplosiveSpiderMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyExplosiveSpiderMeshComponent>();
	}
};
static_assert(alignof(UPyExplosiveSpiderMeshComponent) == 0x000010, "Wrong alignment on UPyExplosiveSpiderMeshComponent");
static_assert(sizeof(UPyExplosiveSpiderMeshComponent) == 0x000A70, "Wrong size on UPyExplosiveSpiderMeshComponent");

// PythonClass PyAbility_104241.PyAbility_104241
// 0x0000 (0x2550 - 0x2550)
class UPyAbility_104241 : public UMarvelGameplayAbility
{
public:
	void BeginPlay();
	void K2_ActivateAbility();
	void OnActivateActionPressed(float TimeWaited);
	void OnConfirmEvent(const struct FGameplayAbilityTargetDataHandle& Data);
	void OnCancelEvent(const struct FGameplayAbilityTargetDataHandle& Data);
	void MissileEventNotify();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_104241">();
	}
	static class UPyAbility_104241* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_104241>();
	}
};
static_assert(alignof(UPyAbility_104241) == 0x000008, "Wrong alignment on UPyAbility_104241");
static_assert(sizeof(UPyAbility_104241) == 0x002550, "Wrong size on UPyAbility_104241");

// PythonClass PyAbility_104241.PyExplosiveSpiderManager
// 0x0000 (0x0470 - 0x0470)
class UPyExplosiveSpiderManager final : public USceneComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyExplosiveSpiderManager">();
	}
	static class UPyExplosiveSpiderManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyExplosiveSpiderManager>();
	}
};
static_assert(alignof(UPyExplosiveSpiderManager) == 0x000010, "Wrong alignment on UPyExplosiveSpiderManager");
static_assert(sizeof(UPyExplosiveSpiderManager) == 0x000470, "Wrong size on UPyExplosiveSpiderManager");

// PythonClass PyAbility_104241.PySummonedComp_10424101
// 0x0030 (0x0CC0 - 0x0C90)
class UPySummonedComp_10424101 : public USummonedComp_10424101
{
public:
	EState_10424101                               State;                                             // 0x0C90(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEvent_10424101                               Event;                                             // 0x0C91(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C92[0x6];                                      // 0x0C92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnElectronicNestEndTask;                           // 0x0C98(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnStateChange;                                     // 0x0CA8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnElectronicNestEndTask__DelegateSignature();
	void OnStateChange__DelegateSignature(EState_10424101 NewState);
	void EndPlay();
	void SetState(EState_10424101 NewState);
	void UpdateState();
	void OnRep_State();
	void OnRep_Event();
	void OnWebActivated();
	void SetEvent(EEvent_10424101 NewEvent);
	void K2_OnBeginAgentTask();
	void K2_OnEndAgentTask();
	void K2_OnRecycleAgentTask();
	void MulticastLaunch(const struct FVector& StartLocation, const struct FVector& Velocity);
	void OnProjectileHit(const struct FHitResult& Hit);
	void OnAttachActorDestroyed(class UGeometryCollectionComponent* Component, class FName Name_0);
	void OnChaosBroken(const struct FChaosBreakEvent& BreakEvent);
	void OnAttachComponentFracture(const struct FVector& Point, const struct FVector& Direction);
	void OnPresetDestuctionBegin(class FName LevelName);
	void OnMovementPlaced();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonedComp_10424101">();
	}
	static class UPySummonedComp_10424101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPySummonedComp_10424101>();
	}
};
static_assert(alignof(UPySummonedComp_10424101) == 0x000010, "Wrong alignment on UPySummonedComp_10424101");
static_assert(sizeof(UPySummonedComp_10424101) == 0x000CC0, "Wrong size on UPySummonedComp_10424101");
static_assert(offsetof(UPySummonedComp_10424101, State) == 0x000C90, "Member 'UPySummonedComp_10424101::State' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10424101, Event) == 0x000C91, "Member 'UPySummonedComp_10424101::Event' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10424101, OnElectronicNestEndTask) == 0x000C98, "Member 'UPySummonedComp_10424101::OnElectronicNestEndTask' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10424101, OnStateChange) == 0x000CA8, "Member 'UPySummonedComp_10424101::OnStateChange' has a wrong offset!");

// PythonClass PyAbility_104241.PySummoned_10424101
// 0x0010 (0x0810 - 0x0800)
#pragma pack(push, 0x1)
class alignas(0x10) APySummoned_10424101 : public ASummoned_10424101
{
public:
	class UPyExplosiveSpiderManager*              SpiderManager;                                     // 0x0800(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	EState_10424101 GetCurrentState();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummoned_10424101">();
	}
	static class APySummoned_10424101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummoned_10424101>();
	}
};
#pragma pack(pop)
static_assert(alignof(APySummoned_10424101) == 0x000010, "Wrong alignment on APySummoned_10424101");
static_assert(sizeof(APySummoned_10424101) == 0x000810, "Wrong size on APySummoned_10424101");
static_assert(offsetof(APySummoned_10424101, SpiderManager) == 0x000800, "Member 'APySummoned_10424101::SpiderManager' has a wrong offset!");

// PythonClass PyAbility_104241.PySummonedComp_10424102
// 0x0000 (0x0C90 - 0x0C90)
class UPySummonedComp_10424102 : public USummonedComp_10424102
{
public:
	void K2_OnBeginAgentTask();
	void OnNestEndTask();
	void K2_OnEndAgentTask();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonedComp_10424102">();
	}
	static class UPySummonedComp_10424102* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPySummonedComp_10424102>();
	}
};
static_assert(alignof(UPySummonedComp_10424102) == 0x000010, "Wrong alignment on UPySummonedComp_10424102");
static_assert(sizeof(UPySummonedComp_10424102) == 0x000C90, "Wrong size on UPySummonedComp_10424102");

// PythonClass PyAbility_104241.PySummonerLoop_10424101_Cue
// 0x0010 (0x0E40 - 0x0E30)
class APySummonerLoop_10424101_Cue final : public AMarvelCueNotify_Summoned
{
public:
	class USkeletalMeshComponent*                 NestMesh;                                          // 0x0E30(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                        FXNestMeshAnim;                                    // 0x0E38(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonerLoop_10424101_Cue">();
	}
	static class APySummonerLoop_10424101_Cue* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummonerLoop_10424101_Cue>();
	}
};
static_assert(alignof(APySummonerLoop_10424101_Cue) == 0x000008, "Wrong alignment on APySummonerLoop_10424101_Cue");
static_assert(sizeof(APySummonerLoop_10424101_Cue) == 0x000E40, "Wrong size on APySummonerLoop_10424101_Cue");
static_assert(offsetof(APySummonerLoop_10424101_Cue, NestMesh) == 0x000E30, "Member 'APySummonerLoop_10424101_Cue::NestMesh' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10424101_Cue, FXNestMeshAnim) == 0x000E38, "Member 'APySummonerLoop_10424101_Cue::FXNestMeshAnim' has a wrong offset!");

// PythonClass PyAbility_104241.PySummonerLoop_10424102_Cue
// 0x0028 (0x0E28 - 0x0E00)
class APySummonerLoop_10424102_Cue : public AMarvelCueNotify_Ability
{
public:
	int32                                         MoveStateAudioID;                                  // 0x0E00(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E04[0x4];                                      // 0x0E04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnStopMoveDelegate;                                // 0x0E08(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBeginMoveDelegate;                               // 0x0E18(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnStopMoveDelegate__DelegateSignature();
	void OnBeginMoveDelegate__DelegateSignature();
	void WhileActiveAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnRemoveAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonerLoop_10424102_Cue">();
	}
	static class APySummonerLoop_10424102_Cue* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummonerLoop_10424102_Cue>();
	}
};
static_assert(alignof(APySummonerLoop_10424102_Cue) == 0x000008, "Wrong alignment on APySummonerLoop_10424102_Cue");
static_assert(sizeof(APySummonerLoop_10424102_Cue) == 0x000E28, "Wrong size on APySummonerLoop_10424102_Cue");
static_assert(offsetof(APySummonerLoop_10424102_Cue, MoveStateAudioID) == 0x000E00, "Member 'APySummonerLoop_10424102_Cue::MoveStateAudioID' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10424102_Cue, OnStopMoveDelegate) == 0x000E08, "Member 'APySummonerLoop_10424102_Cue::OnStopMoveDelegate' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10424102_Cue, OnBeginMoveDelegate) == 0x000E18, "Member 'APySummonerLoop_10424102_Cue::OnBeginMoveDelegate' has a wrong offset!");

// PythonClass PyAbility_104241.PySummonerLoop_10424103_Cue
// 0x0018 (0x0E40 - 0x0E28)
class APySummonerLoop_10424103_Cue final : public APySummonerLoop_10424102_Cue
{
public:
	class UStaticMesh*                            IdleStaticMesh;                                    // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            RunStaticMesh;                                     // 0x0E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   SummonedStaticMesh;                                // 0x0E38(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnExecuteFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonerLoop_10424103_Cue">();
	}
	static class APySummonerLoop_10424103_Cue* GetDefaultObj()
	{
		return GetDefaultObjImpl<APySummonerLoop_10424103_Cue>();
	}
};
static_assert(alignof(APySummonerLoop_10424103_Cue) == 0x000008, "Wrong alignment on APySummonerLoop_10424103_Cue");
static_assert(sizeof(APySummonerLoop_10424103_Cue) == 0x000E40, "Wrong size on APySummonerLoop_10424103_Cue");
static_assert(offsetof(APySummonerLoop_10424103_Cue, IdleStaticMesh) == 0x000E28, "Member 'APySummonerLoop_10424103_Cue::IdleStaticMesh' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10424103_Cue, RunStaticMesh) == 0x000E30, "Member 'APySummonerLoop_10424103_Cue::RunStaticMesh' has a wrong offset!");
static_assert(offsetof(APySummonerLoop_10424103_Cue, SummonedStaticMesh) == 0x000E38, "Member 'APySummonerLoop_10424103_Cue::SummonedStaticMesh' has a wrong offset!");

// PythonClass PyAbility_104241.PyCue_Summoner_Loop_10424105
// 0x00C0 (0x1008 - 0x0F48)
class APyCue_Summoner_Loop_10424105 final : public ACue_Summoner_Loop_10424105
{
public:
	class UMarvelTimelineComponent*               TimelineComponent;                                 // 0x0F48(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                           WebScaleCurve;                                     // 0x0F50(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            WebAlphaCurve;                                     // 0x0F58(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AlphaParmName;                                     // 0x0F60(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            WebWPOCurve;                                       // 0x0F70(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 WPOParmName;                                       // 0x0F78(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            WebEmissiveCuerve;                                 // 0x0F88(0x0008)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EmissiveParmName;                                  // 0x0F90(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           NormalLinkColor;                                   // 0x0FA0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SecondLinkColor;                                   // 0x0FB0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ThirdLinkColor;                                    // 0x0FC0(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFXSystemAsset*                         WebSpawnFXAsset;                                   // 0x0FD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WevSpawnFXOffset;                                  // 0x0FD8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WebSpawnFXDelay;                                   // 0x0FF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_FF4[0x4];                                      // 0x0FF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnStartWebTimelines;                               // 0x0FF8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void K2_OnWebActivated();
	void StartWebTimelines();
	void OnStartWebTimelines__DelegateSignature();
	void UpdateWebScale(const struct FVector& OutValue);
	void UpdateWebAlpha(class FName TrackName, class FName PropertyName, float OutValue);
	void UpdateWebWPO(class FName TrackName, class FName PropertyName, float OutValue);
	void UpdateWebEmissive(class FName TrackName, class FName PropertyName, float OutValue);
	void OnScaleFinished();
	void OnAlphaFinished();
	void OnWPOFinished();
	void OnEmissiveFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Summoner_Loop_10424105">();
	}
	static class APyCue_Summoner_Loop_10424105* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Summoner_Loop_10424105>();
	}
};
static_assert(alignof(APyCue_Summoner_Loop_10424105) == 0x000008, "Wrong alignment on APyCue_Summoner_Loop_10424105");
static_assert(sizeof(APyCue_Summoner_Loop_10424105) == 0x001008, "Wrong size on APyCue_Summoner_Loop_10424105");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, TimelineComponent) == 0x000F48, "Member 'APyCue_Summoner_Loop_10424105::TimelineComponent' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, WebScaleCurve) == 0x000F50, "Member 'APyCue_Summoner_Loop_10424105::WebScaleCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, WebAlphaCurve) == 0x000F58, "Member 'APyCue_Summoner_Loop_10424105::WebAlphaCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, AlphaParmName) == 0x000F60, "Member 'APyCue_Summoner_Loop_10424105::AlphaParmName' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, WebWPOCurve) == 0x000F70, "Member 'APyCue_Summoner_Loop_10424105::WebWPOCurve' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, WPOParmName) == 0x000F78, "Member 'APyCue_Summoner_Loop_10424105::WPOParmName' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, WebEmissiveCuerve) == 0x000F88, "Member 'APyCue_Summoner_Loop_10424105::WebEmissiveCuerve' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, EmissiveParmName) == 0x000F90, "Member 'APyCue_Summoner_Loop_10424105::EmissiveParmName' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, NormalLinkColor) == 0x000FA0, "Member 'APyCue_Summoner_Loop_10424105::NormalLinkColor' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, SecondLinkColor) == 0x000FB0, "Member 'APyCue_Summoner_Loop_10424105::SecondLinkColor' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, ThirdLinkColor) == 0x000FC0, "Member 'APyCue_Summoner_Loop_10424105::ThirdLinkColor' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, WebSpawnFXAsset) == 0x000FD0, "Member 'APyCue_Summoner_Loop_10424105::WebSpawnFXAsset' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, WevSpawnFXOffset) == 0x000FD8, "Member 'APyCue_Summoner_Loop_10424105::WevSpawnFXOffset' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, WebSpawnFXDelay) == 0x000FF0, "Member 'APyCue_Summoner_Loop_10424105::WebSpawnFXDelay' has a wrong offset!");
static_assert(offsetof(APyCue_Summoner_Loop_10424105, OnStartWebTimelines) == 0x000FF8, "Member 'APyCue_Summoner_Loop_10424105::OnStartWebTimelines' has a wrong offset!");

// PythonClass PyAbility_104241.PyCue_SummonerLoop_10424104
// 0x0000 (0x0E30 - 0x0E30)
class APyCue_SummonerLoop_10424104 final : public AMarvelCueNotify_Summoned
{
public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnSummonedEnd(class AActor* Summoned);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_SummonerLoop_10424104">();
	}
	static class APyCue_SummonerLoop_10424104* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_SummonerLoop_10424104>();
	}
};
static_assert(alignof(APyCue_SummonerLoop_10424104) == 0x000008, "Wrong alignment on APyCue_SummonerLoop_10424104");
static_assert(sizeof(APyCue_SummonerLoop_10424104) == 0x000E30, "Wrong size on APyCue_SummonerLoop_10424104");

// PythonClass PyAbility_104241.PySummonedComp_10424103
// 0x0020 (0x0CB0 - 0x0C90)
class UPySummonedComp_10424103 : public USummonedComp_10424103
{
public:
	FMulticastInlineDelegateProperty_             OnLinkStateChanged;                                // 0x0C90(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             GenMeshReformDispatcher;                           // 0x0CA0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnLinkStateChanged__DelegateSignature();
	void GenMeshReformDispatcher__DelegateSignature();
	void K2_OnWebActive();
	void K2_OnEndAgentTask();
	void K2_OnGenMeshReform();
	void K2_OnGenMeshDestroy();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PySummonedComp_10424103">();
	}
	static class UPySummonedComp_10424103* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPySummonedComp_10424103>();
	}
};
static_assert(alignof(UPySummonedComp_10424103) == 0x000010, "Wrong alignment on UPySummonedComp_10424103");
static_assert(sizeof(UPySummonedComp_10424103) == 0x000CB0, "Wrong size on UPySummonedComp_10424103");
static_assert(offsetof(UPySummonedComp_10424103, OnLinkStateChanged) == 0x000C90, "Member 'UPySummonedComp_10424103::OnLinkStateChanged' has a wrong offset!");
static_assert(offsetof(UPySummonedComp_10424103, GenMeshReformDispatcher) == 0x000CA0, "Member 'UPySummonedComp_10424103::GenMeshReformDispatcher' has a wrong offset!");

// PythonClass PyAbility_104241.PyCue_Ability_Loop_10424101
// 0x0000 (0x0E00 - 0x0E00)
class APyCue_Ability_Loop_10424101 final : public AMarvelCueNotify_Ability
{
public:
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Ability_Loop_10424101">();
	}
	static class APyCue_Ability_Loop_10424101* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Ability_Loop_10424101>();
	}
};
static_assert(alignof(APyCue_Ability_Loop_10424101) == 0x000008, "Wrong alignment on APyCue_Ability_Loop_10424101");
static_assert(sizeof(APyCue_Ability_Loop_10424101) == 0x000E00, "Wrong size on APyCue_Ability_Loop_10424101");

}


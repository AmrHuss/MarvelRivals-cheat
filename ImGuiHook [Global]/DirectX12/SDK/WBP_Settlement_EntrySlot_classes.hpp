#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settlement_EntrySlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "PyWidget_SettlementDataUnit_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Settlement_EntrySlot.WBP_Settlement_EntrySlot_C
// 0x10D0 (0x1860 - 0x0790)
class UWBP_Settlement_EntrySlot_C final : public UPyWidget_SettlementData_Slot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0790(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMarvelButton*                          Btn_Focus;                                         // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelButton*                          Btn_Head;                                          // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelButton*                          Btn_Item;                                          // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_bg;                                            // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_BgTexture;                                     // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_DataMask_Hover;                                // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_DutyBg;                                        // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_DutyIcon;                                      // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_EscapeMask;                                    // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_herobg;                                        // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_HeroHeadMask_Hover;                            // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_line;                                          // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_MvpIcon;                                       // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULazyWidget*                            Lazy_Tips_Playerused;                              // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Slot_DataContnet;                                  // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_MVPScore;                                     // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Common_HeroHead_Transverse_C*      WBP_HeroHead;                                      // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         Style;                                             // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_824[0xC];                                      // 0x0824(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Bg_OurSide;                                        // 0x0830(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            Bg_Self;                                           // 0x0900(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            Bg_EnemySide;                                      // 0x09D0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_OurSide;                                    // 0x0AA0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_Self;                                       // 0x0B70(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_EnemySide;                                  // 0x0C40(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         State;                                             // 0x0D10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEscape;                                          // 0x0D14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D15[0x3];                                      // 0x0D15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DutyBg_Color_OurSide;                              // 0x0D18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DutyBg_Color_Self;                                 // 0x0D28(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DutyBg_Color_EnemySide;                            // 0x0D38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Duty;                                              // 0x0D48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4C[0x4];                                      // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Icon_front;                                        // 0x0D50(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            Icon_damage;                                       // 0x0E20(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            Icon_Unknow;                                       // 0x0EF0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            Icon_support;                                      // 0x0FC0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           Color_Line_OurSide;                                // 0x1090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Line_Self;                                   // 0x10A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Line_EnemySide;                              // 0x10B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLast;                                            // 0x10C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C1[0x7];                                     // 0x10C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Icon_Mvp;                                          // 0x10C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon_Svp;                                          // 0x10D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Icon_Color_OurSide;                                // 0x10D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Icon_Color_Self;                                   // 0x10E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Icon_Color_EmenySide;                              // 0x10F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1108[0x8];                                     // 0x1108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Bg_Career_Self;                                    // 0x1110(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            Bg_Career_Other;                                   // 0x11E0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_Career_Self;                                // 0x12B0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_Career_Ours;                                // 0x1380(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_Career_Enemy;                               // 0x1450(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_Career_Self_Hover;                          // 0x1520(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_Career_Ours_Hover;                          // 0x15F0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            HeroBg_Career_Enemy_Hover;                         // 0x16C0(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateBrush                            BgTexture_Career;                                  // 0x1790(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WBP_Settlement_EntrySlot(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Settlement_EntrySlot_C">();
	}
	static class UWBP_Settlement_EntrySlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Settlement_EntrySlot_C>();
	}
};
static_assert(alignof(UWBP_Settlement_EntrySlot_C) == 0x000010, "Wrong alignment on UWBP_Settlement_EntrySlot_C");
static_assert(sizeof(UWBP_Settlement_EntrySlot_C) == 0x001860, "Wrong size on UWBP_Settlement_EntrySlot_C");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, UberGraphFrame) == 0x000790, "Member 'UWBP_Settlement_EntrySlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Btn_Focus) == 0x000798, "Member 'UWBP_Settlement_EntrySlot_C::Btn_Focus' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Btn_Head) == 0x0007A0, "Member 'UWBP_Settlement_EntrySlot_C::Btn_Head' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Btn_Item) == 0x0007A8, "Member 'UWBP_Settlement_EntrySlot_C::Btn_Item' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_bg) == 0x0007B0, "Member 'UWBP_Settlement_EntrySlot_C::Img_bg' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_BgTexture) == 0x0007B8, "Member 'UWBP_Settlement_EntrySlot_C::Img_BgTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_DataMask_Hover) == 0x0007C0, "Member 'UWBP_Settlement_EntrySlot_C::Img_DataMask_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_DutyBg) == 0x0007C8, "Member 'UWBP_Settlement_EntrySlot_C::Img_DutyBg' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_DutyIcon) == 0x0007D0, "Member 'UWBP_Settlement_EntrySlot_C::Img_DutyIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_EscapeMask) == 0x0007D8, "Member 'UWBP_Settlement_EntrySlot_C::Img_EscapeMask' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_herobg) == 0x0007E0, "Member 'UWBP_Settlement_EntrySlot_C::Img_herobg' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_HeroHeadMask_Hover) == 0x0007E8, "Member 'UWBP_Settlement_EntrySlot_C::Img_HeroHeadMask_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_line) == 0x0007F0, "Member 'UWBP_Settlement_EntrySlot_C::Img_line' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Img_MvpIcon) == 0x0007F8, "Member 'UWBP_Settlement_EntrySlot_C::Img_MvpIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Lazy_Tips_Playerused) == 0x000800, "Member 'UWBP_Settlement_EntrySlot_C::Lazy_Tips_Playerused' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Slot_DataContnet) == 0x000808, "Member 'UWBP_Settlement_EntrySlot_C::Slot_DataContnet' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Text_MVPScore) == 0x000810, "Member 'UWBP_Settlement_EntrySlot_C::Text_MVPScore' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, WBP_HeroHead) == 0x000818, "Member 'UWBP_Settlement_EntrySlot_C::WBP_HeroHead' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Style) == 0x000820, "Member 'UWBP_Settlement_EntrySlot_C::Style' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Bg_OurSide) == 0x000830, "Member 'UWBP_Settlement_EntrySlot_C::Bg_OurSide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Bg_Self) == 0x000900, "Member 'UWBP_Settlement_EntrySlot_C::Bg_Self' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Bg_EnemySide) == 0x0009D0, "Member 'UWBP_Settlement_EntrySlot_C::Bg_EnemySide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_OurSide) == 0x000AA0, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_OurSide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_Self) == 0x000B70, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_Self' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_EnemySide) == 0x000C40, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_EnemySide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, State) == 0x000D10, "Member 'UWBP_Settlement_EntrySlot_C::State' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, IsEscape) == 0x000D14, "Member 'UWBP_Settlement_EntrySlot_C::IsEscape' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, DutyBg_Color_OurSide) == 0x000D18, "Member 'UWBP_Settlement_EntrySlot_C::DutyBg_Color_OurSide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, DutyBg_Color_Self) == 0x000D28, "Member 'UWBP_Settlement_EntrySlot_C::DutyBg_Color_Self' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, DutyBg_Color_EnemySide) == 0x000D38, "Member 'UWBP_Settlement_EntrySlot_C::DutyBg_Color_EnemySide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Duty) == 0x000D48, "Member 'UWBP_Settlement_EntrySlot_C::Duty' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_front) == 0x000D50, "Member 'UWBP_Settlement_EntrySlot_C::Icon_front' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_damage) == 0x000E20, "Member 'UWBP_Settlement_EntrySlot_C::Icon_damage' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_Unknow) == 0x000EF0, "Member 'UWBP_Settlement_EntrySlot_C::Icon_Unknow' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_support) == 0x000FC0, "Member 'UWBP_Settlement_EntrySlot_C::Icon_support' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Color_Line_OurSide) == 0x001090, "Member 'UWBP_Settlement_EntrySlot_C::Color_Line_OurSide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Color_Line_Self) == 0x0010A0, "Member 'UWBP_Settlement_EntrySlot_C::Color_Line_Self' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Color_Line_EnemySide) == 0x0010B0, "Member 'UWBP_Settlement_EntrySlot_C::Color_Line_EnemySide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, IsLast) == 0x0010C0, "Member 'UWBP_Settlement_EntrySlot_C::IsLast' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_Mvp) == 0x0010C8, "Member 'UWBP_Settlement_EntrySlot_C::Icon_Mvp' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_Svp) == 0x0010D0, "Member 'UWBP_Settlement_EntrySlot_C::Icon_Svp' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_Color_OurSide) == 0x0010D8, "Member 'UWBP_Settlement_EntrySlot_C::Icon_Color_OurSide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_Color_Self) == 0x0010E8, "Member 'UWBP_Settlement_EntrySlot_C::Icon_Color_Self' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Icon_Color_EmenySide) == 0x0010F8, "Member 'UWBP_Settlement_EntrySlot_C::Icon_Color_EmenySide' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Bg_Career_Self) == 0x001110, "Member 'UWBP_Settlement_EntrySlot_C::Bg_Career_Self' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, Bg_Career_Other) == 0x0011E0, "Member 'UWBP_Settlement_EntrySlot_C::Bg_Career_Other' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_Career_Self) == 0x0012B0, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_Career_Self' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_Career_Ours) == 0x001380, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_Career_Ours' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_Career_Enemy) == 0x001450, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_Career_Enemy' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_Career_Self_Hover) == 0x001520, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_Career_Self_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_Career_Ours_Hover) == 0x0015F0, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_Career_Ours_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, HeroBg_Career_Enemy_Hover) == 0x0016C0, "Member 'UWBP_Settlement_EntrySlot_C::HeroBg_Career_Enemy_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_Settlement_EntrySlot_C, BgTexture_Career) == 0x001790, "Member 'UWBP_Settlement_EntrySlot_C::BgTexture_Career' has a wrong offset!");

}


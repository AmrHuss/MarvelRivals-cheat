#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_Common_ItemData

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Python_enums_structs.hpp"
#include "PyMarvelUserWidget_classes.hpp"
#include "PyWidget_CommonTipsBase_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_Common_ItemData.PyWidget_Common_ItemData
// 0x0118 (0x0700 - 0x05E8)
class UPyWidget_Common_ItemData : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            InDataTime;                                        // 0x05E4(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            OutDataTime;                                       // 0x05F8(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                           InDataTimeImg;                                     // 0x060C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           OutDataTimeImg;                                    // 0x061C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   QualityColor;                                      // 0x0630(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                           TitleDarkColor;                                    // 0x0640(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            DescDarkColor;                                     // 0x0650(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            AccessDarkColor;                                   // 0x0664(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            SourceDarkColor;                                   // 0x0678(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                           ShadowDarkColor;                                   // 0x068C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TitleLightColor;                                   // 0x069C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            DescLightColor;                                    // 0x06AC(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            AccessLightColor;                                  // 0x06C0(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateColor                            SourceLightColor;                                  // 0x06D4(0x0014)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FLinearColor                           ShadowLightColor;                                  // 0x06E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsDarkStyle;                                       // 0x06F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsShowTheme;                                       // 0x06F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPanelPositionType                            PanelPosition;                                     // 0x06FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Destruct();
	void MarvelSetVisible(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Common_ItemData">();
	}
	static class UPyWidget_Common_ItemData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Common_ItemData>();
	}
};
static_assert(alignof(UPyWidget_Common_ItemData) == 0x000008, "Wrong alignment on UPyWidget_Common_ItemData");
static_assert(sizeof(UPyWidget_Common_ItemData) == 0x000700, "Wrong size on UPyWidget_Common_ItemData");
static_assert(offsetof(UPyWidget_Common_ItemData, InDataTime) == 0x0005E4, "Member 'UPyWidget_Common_ItemData::InDataTime' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, OutDataTime) == 0x0005F8, "Member 'UPyWidget_Common_ItemData::OutDataTime' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, InDataTimeImg) == 0x00060C, "Member 'UPyWidget_Common_ItemData::InDataTimeImg' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, OutDataTimeImg) == 0x00061C, "Member 'UPyWidget_Common_ItemData::OutDataTimeImg' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, QualityColor) == 0x000630, "Member 'UPyWidget_Common_ItemData::QualityColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, TitleDarkColor) == 0x000640, "Member 'UPyWidget_Common_ItemData::TitleDarkColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, DescDarkColor) == 0x000650, "Member 'UPyWidget_Common_ItemData::DescDarkColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, AccessDarkColor) == 0x000664, "Member 'UPyWidget_Common_ItemData::AccessDarkColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, SourceDarkColor) == 0x000678, "Member 'UPyWidget_Common_ItemData::SourceDarkColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, ShadowDarkColor) == 0x00068C, "Member 'UPyWidget_Common_ItemData::ShadowDarkColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, TitleLightColor) == 0x00069C, "Member 'UPyWidget_Common_ItemData::TitleLightColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, DescLightColor) == 0x0006AC, "Member 'UPyWidget_Common_ItemData::DescLightColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, AccessLightColor) == 0x0006C0, "Member 'UPyWidget_Common_ItemData::AccessLightColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, SourceLightColor) == 0x0006D4, "Member 'UPyWidget_Common_ItemData::SourceLightColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, ShadowLightColor) == 0x0006E8, "Member 'UPyWidget_Common_ItemData::ShadowLightColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, IsDarkStyle) == 0x0006F8, "Member 'UPyWidget_Common_ItemData::IsDarkStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, IsShowTheme) == 0x0006F9, "Member 'UPyWidget_Common_ItemData::IsShowTheme' has a wrong offset!");
static_assert(offsetof(UPyWidget_Common_ItemData, PanelPosition) == 0x0006FA, "Member 'UPyWidget_Common_ItemData::PanelPosition' has a wrong offset!");

// PythonClass PyWidget_Common_ItemData.PyWidget_ItemDesc_Tips
// 0x0000 (0x0600 - 0x0600)
class UPyWidget_ItemDesc_Tips : public UPyWidget_CommonTipsBase
{
public:
	void OnInitialized();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_ItemDesc_Tips">();
	}
	static class UPyWidget_ItemDesc_Tips* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_ItemDesc_Tips>();
	}
};
static_assert(alignof(UPyWidget_ItemDesc_Tips) == 0x000008, "Wrong alignment on UPyWidget_ItemDesc_Tips");
static_assert(sizeof(UPyWidget_ItemDesc_Tips) == 0x000600, "Wrong size on UPyWidget_ItemDesc_Tips");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_HeroShapeMenu

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PyWidget_TabMenuBase_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_HeroShapeMenu.PyWidget_HeroShapeMenu
// 0x0028 (0x0650 - 0x0628)
class UPyWidget_HeroShapeMenu : public UPyWidget_TabMenuBase
{
public:
	bool                                          IsShowGamepadKey;                                  // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsGamepadFaceBtnTop;                               // 0x0629(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62A[0x2];                                      // 0x062A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ShapeItemColor;                                    // 0x062C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsShapeUnitAutoChangeColor;                        // 0x063C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_63D[0x3];                                      // 0x063D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSwitchShape;                                     // 0x0640(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnSwitchShape__DelegateSignature(int32 ShapeID);
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Destruct();
	void MarvelSetVisible(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HeroShapeMenu">();
	}
	static class UPyWidget_HeroShapeMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HeroShapeMenu>();
	}
};
static_assert(alignof(UPyWidget_HeroShapeMenu) == 0x000008, "Wrong alignment on UPyWidget_HeroShapeMenu");
static_assert(sizeof(UPyWidget_HeroShapeMenu) == 0x000650, "Wrong size on UPyWidget_HeroShapeMenu");
static_assert(offsetof(UPyWidget_HeroShapeMenu, IsShowGamepadKey) == 0x000628, "Member 'UPyWidget_HeroShapeMenu::IsShowGamepadKey' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroShapeMenu, IsGamepadFaceBtnTop) == 0x000629, "Member 'UPyWidget_HeroShapeMenu::IsGamepadFaceBtnTop' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroShapeMenu, ShapeItemColor) == 0x00062C, "Member 'UPyWidget_HeroShapeMenu::ShapeItemColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroShapeMenu, IsShapeUnitAutoChangeColor) == 0x00063C, "Member 'UPyWidget_HeroShapeMenu::IsShapeUnitAutoChangeColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HeroShapeMenu, OnSwitchShape) == 0x000640, "Member 'UPyWidget_HeroShapeMenu::OnSwitchShape' has a wrong offset!");

}


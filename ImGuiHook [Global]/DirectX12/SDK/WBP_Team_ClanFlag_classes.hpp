#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Team_ClanFlag

#include "Basic.hpp"

#include "PyWidget_Clan_ClanEntry_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Team_ClanFlag.WBP_Team_ClanFlag_C
// 0x0028 (0x03E8 - 0x03C0)
class UWBP_Team_ClanFlag_C final : public UPyWidget_Clan_ClanFlagIcon
{
public:
	class UMarvelImage*                           Img_ClanFlag;                                      // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_ClanFlag_1;                                    // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_ClanFlag_2;                                    // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_ClanFlag_Bg;                                   // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelOverlay*                         Overlay_Flag_Vx;                                   // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Team_ClanFlag_C">();
	}
	static class UWBP_Team_ClanFlag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Team_ClanFlag_C>();
	}
};
static_assert(alignof(UWBP_Team_ClanFlag_C) == 0x000008, "Wrong alignment on UWBP_Team_ClanFlag_C");
static_assert(sizeof(UWBP_Team_ClanFlag_C) == 0x0003E8, "Wrong size on UWBP_Team_ClanFlag_C");
static_assert(offsetof(UWBP_Team_ClanFlag_C, Img_ClanFlag) == 0x0003C0, "Member 'UWBP_Team_ClanFlag_C::Img_ClanFlag' has a wrong offset!");
static_assert(offsetof(UWBP_Team_ClanFlag_C, Img_ClanFlag_1) == 0x0003C8, "Member 'UWBP_Team_ClanFlag_C::Img_ClanFlag_1' has a wrong offset!");
static_assert(offsetof(UWBP_Team_ClanFlag_C, Img_ClanFlag_2) == 0x0003D0, "Member 'UWBP_Team_ClanFlag_C::Img_ClanFlag_2' has a wrong offset!");
static_assert(offsetof(UWBP_Team_ClanFlag_C, Img_ClanFlag_Bg) == 0x0003D8, "Member 'UWBP_Team_ClanFlag_C::Img_ClanFlag_Bg' has a wrong offset!");
static_assert(offsetof(UWBP_Team_ClanFlag_C, Overlay_Flag_Vx) == 0x0003E0, "Member 'UWBP_Team_ClanFlag_C::Overlay_Flag_Vx' has a wrong offset!");

}


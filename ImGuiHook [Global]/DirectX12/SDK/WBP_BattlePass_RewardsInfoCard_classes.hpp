#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BattlePass_RewardsInfoCard

#include "Basic.hpp"

#include "PyWidget_BattlePass_Recharge_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BattlePass_RewardsInfoCard.WBP_BattlePass_RewardsInfoCard_C
// 0x0088 (0x0628 - 0x05A0)
class UWBP_BattlePass_RewardsInfoCard_C final : public UPyWidget_BattlePass_RechargeInfoCard
{
public:
	class UImage*                                 Img_Card_Title;                                    // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_Card_Title;                                   // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_Hero_HeroName;                                // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_Item_Title;                                   // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_SkinName;                                     // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_Title_CardLeft;                               // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_UnlockGrid;                                   // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_UnlockNum;                                    // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelTextBlock*                       Text_UnlockNum2;                                   // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Card_FistRecharge_C*    WBP_BattlePass_Card_FistRecharge;                  // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Card_Item_C*            WBP_BattlePass_Card_Item_0;                        // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Card_Item_C*            WBP_BattlePass_Card_Item_1;                        // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Card_Item_C*            WBP_BattlePass_Card_Item_2;                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Card_Item_C*            WBP_BattlePass_Card_Item_3;                        // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Card_Item_C*            WBP_BattlePass_Card_Item_4;                        // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Card_Item_C*            WBP_BattlePass_Card_Item_5;                        // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Card_Item_C*            WBP_BattlePass_Card_Item_6;                        // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BattlePass_RewardsInfoCard_C">();
	}
	static class UWBP_BattlePass_RewardsInfoCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BattlePass_RewardsInfoCard_C>();
	}
};
static_assert(alignof(UWBP_BattlePass_RewardsInfoCard_C) == 0x000008, "Wrong alignment on UWBP_BattlePass_RewardsInfoCard_C");
static_assert(sizeof(UWBP_BattlePass_RewardsInfoCard_C) == 0x000628, "Wrong size on UWBP_BattlePass_RewardsInfoCard_C");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Img_Card_Title) == 0x0005A0, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Img_Card_Title' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Text_Card_Title) == 0x0005A8, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Text_Card_Title' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Text_Hero_HeroName) == 0x0005B0, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Text_Hero_HeroName' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Text_Item_Title) == 0x0005B8, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Text_Item_Title' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Text_SkinName) == 0x0005C0, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Text_SkinName' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Text_Title_CardLeft) == 0x0005C8, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Text_Title_CardLeft' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Text_UnlockGrid) == 0x0005D0, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Text_UnlockGrid' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Text_UnlockNum) == 0x0005D8, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Text_UnlockNum' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, Text_UnlockNum2) == 0x0005E0, "Member 'UWBP_BattlePass_RewardsInfoCard_C::Text_UnlockNum2' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, WBP_BattlePass_Card_FistRecharge) == 0x0005E8, "Member 'UWBP_BattlePass_RewardsInfoCard_C::WBP_BattlePass_Card_FistRecharge' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, WBP_BattlePass_Card_Item_0) == 0x0005F0, "Member 'UWBP_BattlePass_RewardsInfoCard_C::WBP_BattlePass_Card_Item_0' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, WBP_BattlePass_Card_Item_1) == 0x0005F8, "Member 'UWBP_BattlePass_RewardsInfoCard_C::WBP_BattlePass_Card_Item_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, WBP_BattlePass_Card_Item_2) == 0x000600, "Member 'UWBP_BattlePass_RewardsInfoCard_C::WBP_BattlePass_Card_Item_2' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, WBP_BattlePass_Card_Item_3) == 0x000608, "Member 'UWBP_BattlePass_RewardsInfoCard_C::WBP_BattlePass_Card_Item_3' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, WBP_BattlePass_Card_Item_4) == 0x000610, "Member 'UWBP_BattlePass_RewardsInfoCard_C::WBP_BattlePass_Card_Item_4' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, WBP_BattlePass_Card_Item_5) == 0x000618, "Member 'UWBP_BattlePass_RewardsInfoCard_C::WBP_BattlePass_Card_Item_5' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_RewardsInfoCard_C, WBP_BattlePass_Card_Item_6) == 0x000620, "Member 'UWBP_BattlePass_RewardsInfoCard_C::WBP_BattlePass_Card_Item_6' has a wrong offset!");

}


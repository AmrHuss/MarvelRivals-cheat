#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyMarvelGameInstance

#include "Basic.hpp"

#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyMarvelGameInstance.PyMarvelGameInstance
// 0x0058 (0x04E8 - 0x0490)
class UPyMarvelGameInstance : public UMarvelGameInstance
{
public:
	int32                                         LobbyConnectionID;                                 // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PlayerName;                                        // 0x0498(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ModeID;                                            // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LoginKey;                                          // 0x04B0(0x0010)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ColorManager;                                      // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnReceiveDemoPlaybackFailure;                      // 0x04C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnSystemSwitchChanged;                             // 0x04D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnReceiveDemoPlaybackFailure__DelegateSignature(const class FString& Error);
	void OnSystemSwitchChanged__DelegateSignature(int32 Switch_Key, bool Is_enabled);
	void ReceiveInit();
	void UpdateReplayEnv();
	void CallEngineQuit(const class FString& SReason);
	void ReceiveOnStart();
	void OnFrameEnd(float FrameTime);
	void FakeTick();
	void ReceiveOnLoadComplete(const float LoadTime, const class FString& MapName);
	void ReceiveShutdown();
	void ReceiveDemoPlaybackFailure(const class FString& Error);
	void ReceiveNetworkReplayVersion(const class FString& Error);
	class FString WriteReplayLoadingInfo();
	void ProcessReplayLoadingInfo(const class FString& SpecificData, class FString* Error);
	void UploadDrpfData(const class FString& DrpfType, const class FString& DrpfData);
	void ReqServerBuildSettings();
	void ReceiveOnAfterForkInChild();
	void OnPostGC();
	void OnPreGarbageCollect();
	bool PyIsSystemSwitchOpenedByID(int32 RowID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyMarvelGameInstance">();
	}
	static class UPyMarvelGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyMarvelGameInstance>();
	}
};
static_assert(alignof(UPyMarvelGameInstance) == 0x000008, "Wrong alignment on UPyMarvelGameInstance");
static_assert(sizeof(UPyMarvelGameInstance) == 0x0004E8, "Wrong size on UPyMarvelGameInstance");
static_assert(offsetof(UPyMarvelGameInstance, LobbyConnectionID) == 0x000490, "Member 'UPyMarvelGameInstance::LobbyConnectionID' has a wrong offset!");
static_assert(offsetof(UPyMarvelGameInstance, PlayerName) == 0x000498, "Member 'UPyMarvelGameInstance::PlayerName' has a wrong offset!");
static_assert(offsetof(UPyMarvelGameInstance, ModeID) == 0x0004A8, "Member 'UPyMarvelGameInstance::ModeID' has a wrong offset!");
static_assert(offsetof(UPyMarvelGameInstance, LoginKey) == 0x0004B0, "Member 'UPyMarvelGameInstance::LoginKey' has a wrong offset!");
static_assert(offsetof(UPyMarvelGameInstance, ColorManager) == 0x0004C0, "Member 'UPyMarvelGameInstance::ColorManager' has a wrong offset!");
static_assert(offsetof(UPyMarvelGameInstance, OnReceiveDemoPlaybackFailure) == 0x0004C8, "Member 'UPyMarvelGameInstance::OnReceiveDemoPlaybackFailure' has a wrong offset!");
static_assert(offsetof(UPyMarvelGameInstance, OnSystemSwitchChanged) == 0x0004D8, "Member 'UPyMarvelGameInstance::OnSystemSwitchChanged' has a wrong offset!");

}


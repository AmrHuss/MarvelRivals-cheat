#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BattlePass_CuttingPlate_CommonItem

#include "Basic.hpp"

#include "PyWidget_BattlePass_PropView_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BattlePass_CuttingPlate_CommonItem.WBP_BattlePass_CuttingPlate_CommonItem_C
// 0x0130 (0x0D10 - 0x0BE0)
class UWBP_BattlePass_CuttingPlate_CommonItem_C final : public UPyWidget_BattlePass_CuttingItem
{
public:
	class UWidgetAnimation*                       Anim_Unlock_Normal;                                // 0x0BD8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Free_Normal;                                  // 0x0BE0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Unlock;                                       // 0x0BE8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_SelectToNormal;                               // 0x0BF0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Flow;                                         // 0x0BF8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Refresh;                                      // 0x0C00(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_PresslToHover;                                // 0x0C08(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_HoverToSelect;                                // 0x0C10(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_HoverToNor;                                   // 0x0C18(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UMarvelButton*                          Btn_Item;                                          // 0x0C20(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelButton*                          Btn_Select;                                        // 0x0C28(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelCanvasPanel*                     CanvasPanel_Vx_Hover;                              // 0x0C30(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Img_Exchange;                                      // 0x0C38(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_Item_Bg;                                       // 0x0C40(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Img_Item_Select;                                   // 0x0C48(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelOverlay*                         MarvelOverlay_0;                                   // 0x0C50(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow;                                       // 0x0C58(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow_1;                                     // 0x0C60(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow01;                                     // 0x0C68(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow01_1;                                   // 0x0C70(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow02;                                     // 0x0C78(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow02_1;                                   // 0x0C80(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow03;                                     // 0x0C88(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow03_1;                                   // 0x0C90(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Flow_Add;                                   // 0x0C98(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Hover_Flow04;                               // 0x0CA0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Hover_Flow06;                               // 0x0CA8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Hover_Flow07;                               // 0x0CB0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Hover_Flow08;                               // 0x0CB8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Hover_Flow09;                               // 0x0CC0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Hover_Flow10;                               // 0x0CC8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Hover_Flow11;                               // 0x0CD0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMarvelImage*                           Vx_lmg_Hover_Flow12;                               // 0x0CD8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_GroupNumber_C*          WBP_BattlePass_GroupNumber;                        // 0x0CE0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_Item_Tag_C*             WBP_BattlePass_Item_Tag;                           // 0x0CE8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattlePass_ItemPrice_C*            WBP_BattlePass_ItemPrice;                          // 0x0CF0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Common_ImageMaskCut_C*             WBP_Common_ImageMaskCut;                           // 0x0CF8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Common_ImageMaskCut_C*             WBP_Mask;                                          // 0x0D00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BattlePass_CuttingPlate_CommonItem_C">();
	}
	static class UWBP_BattlePass_CuttingPlate_CommonItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BattlePass_CuttingPlate_CommonItem_C>();
	}
};
static_assert(alignof(UWBP_BattlePass_CuttingPlate_CommonItem_C) == 0x000010, "Wrong alignment on UWBP_BattlePass_CuttingPlate_CommonItem_C");
static_assert(sizeof(UWBP_BattlePass_CuttingPlate_CommonItem_C) == 0x000D10, "Wrong size on UWBP_BattlePass_CuttingPlate_CommonItem_C");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_Unlock_Normal) == 0x000BD8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_Unlock_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_Free_Normal) == 0x000BE0, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_Free_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_Unlock) == 0x000BE8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_Unlock' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_SelectToNormal) == 0x000BF0, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_SelectToNormal' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_Flow) == 0x000BF8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_Flow' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_Refresh) == 0x000C00, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_Refresh' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_PresslToHover) == 0x000C08, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_PresslToHover' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_HoverToSelect) == 0x000C10, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_HoverToSelect' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Anim_HoverToNor) == 0x000C18, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Anim_HoverToNor' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Btn_Item) == 0x000C20, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Btn_Item' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Btn_Select) == 0x000C28, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Btn_Select' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, CanvasPanel_Vx_Hover) == 0x000C30, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::CanvasPanel_Vx_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Img_Exchange) == 0x000C38, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Img_Exchange' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Img_Item_Bg) == 0x000C40, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Img_Item_Bg' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Img_Item_Select) == 0x000C48, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Img_Item_Select' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, MarvelOverlay_0) == 0x000C50, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::MarvelOverlay_0' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow) == 0x000C58, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow_1) == 0x000C60, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow01) == 0x000C68, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow01' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow01_1) == 0x000C70, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow01_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow02) == 0x000C78, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow02' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow02_1) == 0x000C80, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow02_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow03) == 0x000C88, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow03' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow03_1) == 0x000C90, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow03_1' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Flow_Add) == 0x000C98, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Flow_Add' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Hover_Flow04) == 0x000CA0, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Hover_Flow04' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Hover_Flow06) == 0x000CA8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Hover_Flow06' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Hover_Flow07) == 0x000CB0, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Hover_Flow07' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Hover_Flow08) == 0x000CB8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Hover_Flow08' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Hover_Flow09) == 0x000CC0, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Hover_Flow09' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Hover_Flow10) == 0x000CC8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Hover_Flow10' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Hover_Flow11) == 0x000CD0, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Hover_Flow11' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, Vx_lmg_Hover_Flow12) == 0x000CD8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::Vx_lmg_Hover_Flow12' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, WBP_BattlePass_GroupNumber) == 0x000CE0, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::WBP_BattlePass_GroupNumber' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, WBP_BattlePass_Item_Tag) == 0x000CE8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::WBP_BattlePass_Item_Tag' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, WBP_BattlePass_ItemPrice) == 0x000CF0, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::WBP_BattlePass_ItemPrice' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, WBP_Common_ImageMaskCut) == 0x000CF8, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::WBP_Common_ImageMaskCut' has a wrong offset!");
static_assert(offsetof(UWBP_BattlePass_CuttingPlate_CommonItem_C, WBP_Mask) == 0x000D00, "Member 'UWBP_BattlePass_CuttingPlate_CommonItem_C::WBP_Mask' has a wrong offset!");

}


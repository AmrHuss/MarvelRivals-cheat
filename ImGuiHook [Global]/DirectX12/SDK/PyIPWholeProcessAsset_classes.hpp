#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyIPWholeProcessAsset

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// PythonClass PyIPWholeProcessAsset.PyIPWholeProcessAsset
// 0x00A8 (0x00E0 - 0x0038)
class UPyIPWholeProcessAsset final : public UPrimaryDataAsset
{
public:
	float                                         MaxLoadingTime;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Skip_Keyboard;                                     // 0x0040(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   Skip_Gamepad;                                      // 0x0060(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WheelAngleStep;                                    // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PsWhellMultiplier;                                 // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MouseMoveStep;                                     // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MouseDistanceTrigger;                              // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumDeadZone;                                   // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumDeadZone;                                   // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PanelOpenLocateAngle;                              // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DeviationAngel;                                    // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PreEntranceTime;                                   // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StandbyPersonalizedActionDelayTime;                // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SlowMotionTotalTime;                               // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        SlowMotionSpeedCurve;                              // 0x00B0(0x0028)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransitionFadeInTotalTime;                         // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TransitionFadeOutTotalTime;                        // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyIPWholeProcessAsset">();
	}
	static class UPyIPWholeProcessAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyIPWholeProcessAsset>();
	}
};
static_assert(alignof(UPyIPWholeProcessAsset) == 0x000008, "Wrong alignment on UPyIPWholeProcessAsset");
static_assert(sizeof(UPyIPWholeProcessAsset) == 0x0000E0, "Wrong size on UPyIPWholeProcessAsset");
static_assert(offsetof(UPyIPWholeProcessAsset, MaxLoadingTime) == 0x000038, "Member 'UPyIPWholeProcessAsset::MaxLoadingTime' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, Skip_Keyboard) == 0x000040, "Member 'UPyIPWholeProcessAsset::Skip_Keyboard' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, Skip_Gamepad) == 0x000060, "Member 'UPyIPWholeProcessAsset::Skip_Gamepad' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, WheelAngleStep) == 0x000080, "Member 'UPyIPWholeProcessAsset::WheelAngleStep' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, PsWhellMultiplier) == 0x000084, "Member 'UPyIPWholeProcessAsset::PsWhellMultiplier' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, MouseMoveStep) == 0x000088, "Member 'UPyIPWholeProcessAsset::MouseMoveStep' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, MouseDistanceTrigger) == 0x00008C, "Member 'UPyIPWholeProcessAsset::MouseDistanceTrigger' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, MinimumDeadZone) == 0x000090, "Member 'UPyIPWholeProcessAsset::MinimumDeadZone' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, MaximumDeadZone) == 0x000094, "Member 'UPyIPWholeProcessAsset::MaximumDeadZone' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, PanelOpenLocateAngle) == 0x000098, "Member 'UPyIPWholeProcessAsset::PanelOpenLocateAngle' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, DeviationAngel) == 0x00009C, "Member 'UPyIPWholeProcessAsset::DeviationAngel' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, PreEntranceTime) == 0x0000A0, "Member 'UPyIPWholeProcessAsset::PreEntranceTime' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, StandbyPersonalizedActionDelayTime) == 0x0000A4, "Member 'UPyIPWholeProcessAsset::StandbyPersonalizedActionDelayTime' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, SlowMotionTotalTime) == 0x0000A8, "Member 'UPyIPWholeProcessAsset::SlowMotionTotalTime' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, SlowMotionSpeedCurve) == 0x0000B0, "Member 'UPyIPWholeProcessAsset::SlowMotionSpeedCurve' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, TransitionFadeInTotalTime) == 0x0000D8, "Member 'UPyIPWholeProcessAsset::TransitionFadeInTotalTime' has a wrong offset!");
static_assert(offsetof(UPyIPWholeProcessAsset, TransitionFadeOutTotalTime) == 0x0000DC, "Member 'UPyIPWholeProcessAsset::TransitionFadeOutTotalTime' has a wrong offset!");

}


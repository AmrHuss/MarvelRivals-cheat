#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_104771

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "SlateCore_structs.hpp"
#include "Hero_1047_structs.hpp"
#include "Hero_1047_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_104771.PyCue_Buff_10477110
// 0x0000 (0x0FE8 - 0x0FE8)
class APyCue_Buff_10477110 final : public AMarvelCueNotify_Buff
{
public:
	void OnWidgetShowUp(class AMarvelBaseCharacter* TargetCharacter, class UUserWidget* DisplayWidget);
	void OnRemoveFX(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Buff_10477110">();
	}
	static class APyCue_Buff_10477110* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Buff_10477110>();
	}
};
static_assert(alignof(APyCue_Buff_10477110) == 0x000008, "Wrong alignment on APyCue_Buff_10477110");
static_assert(sizeof(APyCue_Buff_10477110) == 0x000FE8, "Wrong size on APyCue_Buff_10477110");

// PythonClass PyAbility_104771.PyConfig_104771
// 0x0030 (0x0208 - 0x01D8)
class UPyConfig_104771 final : public UConfig_104771
{
public:
	bool                                          HoldSpaceToGetOnWall;                              // 0x01D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateChangedTaskParam                 GetOnWallActiveUserSetting;                        // 0x01DC(0x0028)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         DevourScopeId;                                     // 0x0204(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_104771">();
	}
	static class UPyConfig_104771* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_104771>();
	}
};
static_assert(alignof(UPyConfig_104771) == 0x000008, "Wrong alignment on UPyConfig_104771");
static_assert(sizeof(UPyConfig_104771) == 0x000208, "Wrong size on UPyConfig_104771");
static_assert(offsetof(UPyConfig_104771, HoldSpaceToGetOnWall) == 0x0001D8, "Member 'UPyConfig_104771::HoldSpaceToGetOnWall' has a wrong offset!");
static_assert(offsetof(UPyConfig_104771, GetOnWallActiveUserSetting) == 0x0001DC, "Member 'UPyConfig_104771::GetOnWallActiveUserSetting' has a wrong offset!");
static_assert(offsetof(UPyConfig_104771, DevourScopeId) == 0x000204, "Member 'UPyConfig_104771::DevourScopeId' has a wrong offset!");

// PythonClass PyAbility_104771.PyAbility_104771_New
// 0x0008 (0x2A00 - 0x29F8)
class UPyAbility_104771_New : public UAbility_104771
{
public:
	EAbilityCameraState_104771                    AbilityCameraState;                                // 0x29F8(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnRep_AbilityCameraState();
	void BeginPlay();
	void OnMovementModeChanged(class ACharacter* Char, EMovementMode Pre, uint8 Precustom);
	void OnSelectRegionFinish(bool bActivateByTimerOrMT);
	void OnPressCameraChangeKey(float TimeWaited);
	void OnReleaseCameraChangeKey(float TimeWait);
	void OnSelectRegionWarningFinish();
	void OnDevourSwimMontageEvent(const struct FGameplayTag& Tag, const struct FGameplayEventData& Data);
	void AfterSetDevourCharacters();
	void OnUpdateDevouredCharactersData();
	void OnSpitOutEnemy(float TimeWaited);
	void OnSpitOutAlly(float TimeWaited);
	void OnJeffDivingWindowStateChanged(bool IsWindowOpen);
	void OnTryGetOnWallBegin(float Time);
	void OnTryGetOnWallCancelled(float Time);
	void OnNetSync(const struct FGameplayAbilityTargetDataHandle& Data);
	bool TryMakeTriggerContext(struct FGameplayEventData& EventData);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void NativeOnMontageEvent(const class FString& EventTag);
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_104771_New">();
	}
	static class UPyAbility_104771_New* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_104771_New>();
	}
};
static_assert(alignof(UPyAbility_104771_New) == 0x000008, "Wrong alignment on UPyAbility_104771_New");
static_assert(sizeof(UPyAbility_104771_New) == 0x002A00, "Wrong size on UPyAbility_104771_New");
static_assert(offsetof(UPyAbility_104771_New, AbilityCameraState) == 0x0029F8, "Member 'UPyAbility_104771_New::AbilityCameraState' has a wrong offset!");

// PythonClass PyAbility_104771.PyCue_Scope_HitImpact_10477101
// 0x0000 (0x04D0 - 0x04D0)
class UPyCue_Scope_HitImpact_10477101 final : public UMarvelCueNotify_HitImpact
{
public:
	void OnExecuteAudio(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Scope_HitImpact_10477101">();
	}
	static class UPyCue_Scope_HitImpact_10477101* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyCue_Scope_HitImpact_10477101>();
	}
};
static_assert(alignof(UPyCue_Scope_HitImpact_10477101) == 0x000008, "Wrong alignment on UPyCue_Scope_HitImpact_10477101");
static_assert(sizeof(UPyCue_Scope_HitImpact_10477101) == 0x0004D0, "Wrong size on UPyCue_Scope_HitImpact_10477101");

// PythonClass PyAbility_104771.PyUIController_104771
// 0x0000 (0x0C58 - 0x0C58)
class UPyUIController_104771 final : public UUIC_Ability
{
public:
	void OnInit();
	void Destruct();
	void OnStateChanged();
	void OnDevouredCharacterChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyUIController_104771">();
	}
	static class UPyUIController_104771* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyUIController_104771>();
	}
};
static_assert(alignof(UPyUIController_104771) == 0x000008, "Wrong alignment on UPyUIController_104771");
static_assert(sizeof(UPyUIController_104771) == 0x000C58, "Wrong size on UPyUIController_104771");

// PythonClass PyAbility_104771.PyWidget_104771
// 0x0010 (0x0660 - 0x0650)
class UPyWidget_104771 final : public UWidget_AbilityStatus_Base
{
public:
	class UPanelWidget*                           PortaitList_Left;                                  // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPanelWidget*                           PortaitList_Right;                                 // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void SetAbility(class UMarvelGameplayAbility* Ability_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_104771">();
	}
	static class UPyWidget_104771* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_104771>();
	}
};
static_assert(alignof(UPyWidget_104771) == 0x000008, "Wrong alignment on UPyWidget_104771");
static_assert(sizeof(UPyWidget_104771) == 0x000660, "Wrong size on UPyWidget_104771");
static_assert(offsetof(UPyWidget_104771, PortaitList_Left) == 0x000650, "Member 'UPyWidget_104771::PortaitList_Left' has a wrong offset!");
static_assert(offsetof(UPyWidget_104771, PortaitList_Right) == 0x000658, "Member 'UPyWidget_104771::PortaitList_Right' has a wrong offset!");

// PythonClass PyAbility_104771.PyWidget_104771_HeroList
// 0x0050 (0x05F0 - 0x05A0)
class UPyWidget_104771_HeroList final : public UMarvelUserWidget
{
public:
	struct FSlateColor                            AllyBGColor;                                       // 0x05A0(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            AllyFrameColor;                                    // 0x05B4(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            EnemyBGColor;                                      // 0x05C8(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            EnemyFrameColor;                                   // 0x05DC(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_104771_HeroList">();
	}
	static class UPyWidget_104771_HeroList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_104771_HeroList>();
	}
};
static_assert(alignof(UPyWidget_104771_HeroList) == 0x000008, "Wrong alignment on UPyWidget_104771_HeroList");
static_assert(sizeof(UPyWidget_104771_HeroList) == 0x0005F0, "Wrong size on UPyWidget_104771_HeroList");
static_assert(offsetof(UPyWidget_104771_HeroList, AllyBGColor) == 0x0005A0, "Member 'UPyWidget_104771_HeroList::AllyBGColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_104771_HeroList, AllyFrameColor) == 0x0005B4, "Member 'UPyWidget_104771_HeroList::AllyFrameColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_104771_HeroList, EnemyBGColor) == 0x0005C8, "Member 'UPyWidget_104771_HeroList::EnemyBGColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_104771_HeroList, EnemyFrameColor) == 0x0005DC, "Member 'UPyWidget_104771_HeroList::EnemyFrameColor' has a wrong offset!");

}


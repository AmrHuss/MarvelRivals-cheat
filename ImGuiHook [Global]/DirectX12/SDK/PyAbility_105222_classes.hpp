#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_105222

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "PyAbility_105221_classes.hpp"


namespace SDK
{

// PythonClass PyAbility_105222.PyConfig_105222
// 0x1F68 (0x2000 - 0x0098)
class UPyConfig_105222 final : public UMarvelAbilityConfig
{
public:
	TArray<TArray<int32>>                         ScopeId;                                           // 0x0098(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FDashAbilityInfo                       DashInfo;                                          // 0x00A8(0x0B70)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMarvelTraceRule                       TraceRule;                                         // 0x0C18(0x0390)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                         Pad_FA8[0x8];                                      // 0x0FA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSelectTaskParam                       SelectTaskParams;                                  // 0x0FB0(0x1040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         ReduceCDAbilityID;                                 // 0x1FF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReduceCDLength;                                    // 0x1FF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ComboTimeout;                                      // 0x1FF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_105222">();
	}
	static class UPyConfig_105222* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_105222>();
	}
};
static_assert(alignof(UPyConfig_105222) == 0x000010, "Wrong alignment on UPyConfig_105222");
static_assert(sizeof(UPyConfig_105222) == 0x002000, "Wrong size on UPyConfig_105222");
static_assert(offsetof(UPyConfig_105222, ScopeId) == 0x000098, "Member 'UPyConfig_105222::ScopeId' has a wrong offset!");
static_assert(offsetof(UPyConfig_105222, DashInfo) == 0x0000A8, "Member 'UPyConfig_105222::DashInfo' has a wrong offset!");
static_assert(offsetof(UPyConfig_105222, TraceRule) == 0x000C18, "Member 'UPyConfig_105222::TraceRule' has a wrong offset!");
static_assert(offsetof(UPyConfig_105222, SelectTaskParams) == 0x000FB0, "Member 'UPyConfig_105222::SelectTaskParams' has a wrong offset!");
static_assert(offsetof(UPyConfig_105222, ReduceCDAbilityID) == 0x001FF0, "Member 'UPyConfig_105222::ReduceCDAbilityID' has a wrong offset!");
static_assert(offsetof(UPyConfig_105222, ReduceCDLength) == 0x001FF4, "Member 'UPyConfig_105222::ReduceCDLength' has a wrong offset!");
static_assert(offsetof(UPyConfig_105222, ComboTimeout) == 0x001FF8, "Member 'UPyConfig_105222::ComboTimeout' has a wrong offset!");

// PythonClass PyAbility_105222.PyAbility_105222
// 0x0000 (0x2560 - 0x2560)
class UPyAbility_105222 : public UPyAbility_105221
{
public:
	void K2_ActivateAbility();
	bool CanActivate();
	void NativeOnMontageEvent(const class FString& Tag);
	void MissileEventNotify();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_105222">();
	}
	static class UPyAbility_105222* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_105222>();
	}
};
static_assert(alignof(UPyAbility_105222) == 0x000008, "Wrong alignment on UPyAbility_105222");
static_assert(sizeof(UPyAbility_105222) == 0x002560, "Wrong size on UPyAbility_105222");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_HpBar

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_HpBar.PyWidget_HpBar
// 0x00D0 (0x0860 - 0x0790)
class UPyWidget_HpBar final : public UWidget_HpBar
{
public:
	float                                         Main_Height;                                       // 0x0790(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Slopeleft_value;                                   // 0x0794(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Main_DotOpacity;                                   // 0x0798(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Character_DotOpacity;                              // 0x079C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnchorData                            BuffBoxLayout;                                     // 0x07A0(0x0040)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                CharacterBuffBox;                                  // 0x07E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                SummonedBuffBox;                                   // 0x07E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MainBarUpdateInterval;                             // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MainBarUpdateDuration;                             // 0x07F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReduceAnimDuration;                                // 0x07F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                ReplayLeftBuffBox;                                 // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                ReplayRightBuffBox;                                // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class FString>      BuffWidgets;                                       // 0x0810(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HpBar">();
	}
	static class UPyWidget_HpBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HpBar>();
	}
};
static_assert(alignof(UPyWidget_HpBar) == 0x000008, "Wrong alignment on UPyWidget_HpBar");
static_assert(sizeof(UPyWidget_HpBar) == 0x000860, "Wrong size on UPyWidget_HpBar");
static_assert(offsetof(UPyWidget_HpBar, Main_Height) == 0x000790, "Member 'UPyWidget_HpBar::Main_Height' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, Slopeleft_value) == 0x000794, "Member 'UPyWidget_HpBar::Slopeleft_value' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, Main_DotOpacity) == 0x000798, "Member 'UPyWidget_HpBar::Main_DotOpacity' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, Character_DotOpacity) == 0x00079C, "Member 'UPyWidget_HpBar::Character_DotOpacity' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, BuffBoxLayout) == 0x0007A0, "Member 'UPyWidget_HpBar::BuffBoxLayout' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, CharacterBuffBox) == 0x0007E0, "Member 'UPyWidget_HpBar::CharacterBuffBox' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, SummonedBuffBox) == 0x0007E8, "Member 'UPyWidget_HpBar::SummonedBuffBox' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, MainBarUpdateInterval) == 0x0007F0, "Member 'UPyWidget_HpBar::MainBarUpdateInterval' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, MainBarUpdateDuration) == 0x0007F4, "Member 'UPyWidget_HpBar::MainBarUpdateDuration' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, ReduceAnimDuration) == 0x0007F8, "Member 'UPyWidget_HpBar::ReduceAnimDuration' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, ReplayLeftBuffBox) == 0x000800, "Member 'UPyWidget_HpBar::ReplayLeftBuffBox' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, ReplayRightBuffBox) == 0x000808, "Member 'UPyWidget_HpBar::ReplayRightBuffBox' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar, BuffWidgets) == 0x000810, "Member 'UPyWidget_HpBar::BuffWidgets' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidget_ScreenFXManager
// 0x00A0 (0x0670 - 0x05D0)
class UPyWidget_ScreenFXManager final : public UWidget_ScreenFXManager
{
public:
	TMap<struct FGameplayTag, class FString>      FXWidgetsNames;                                    // 0x05D0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FGameplayTag> BlockCueTagsMap;                                   // 0x0620(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void SetTargetActor(class AActor* InActor);
	void SetTargetTreatPercentageCur(float InPercentage);
	bool ShouldShowBuff(const class FString& Tag);
	void OnTagUpdated(const struct FGameplayTag& Tag, bool TagExist);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_ScreenFXManager">();
	}
	static class UPyWidget_ScreenFXManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_ScreenFXManager>();
	}
};
static_assert(alignof(UPyWidget_ScreenFXManager) == 0x000008, "Wrong alignment on UPyWidget_ScreenFXManager");
static_assert(sizeof(UPyWidget_ScreenFXManager) == 0x000670, "Wrong size on UPyWidget_ScreenFXManager");
static_assert(offsetof(UPyWidget_ScreenFXManager, FXWidgetsNames) == 0x0005D0, "Member 'UPyWidget_ScreenFXManager::FXWidgetsNames' has a wrong offset!");
static_assert(offsetof(UPyWidget_ScreenFXManager, BlockCueTagsMap) == 0x000620, "Member 'UPyWidget_ScreenFXManager::BlockCueTagsMap' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidget_HpBar_V3
// 0x00E0 (0x0870 - 0x0790)
class UPyWidget_HpBar_V3 : public UWidget_HpBar
{
public:
	bool                                          IsUsedIn3D;                                        // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_791[0x3];                                      // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           HpColor;                                           // 0x0794(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         BuffWidgetsPrefix;                                 // 0x07A8(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FBuffFrameInfo> BuffWidgets;                                       // 0x07B8(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FGameplayTag> BlockCueTagsMap;                                   // 0x0808(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                HpBarVxClass;                                      // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             BreakEndedDispatcher;                              // 0x0860(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void BreakEndedDispatcher__DelegateSignature();
	void OnInitialized();
	void Construct();
	void SetTargetActor(class AActor* InActor);
	void OnTargetTakeTreat(class AActor* Source, class AActor* Target, const struct FAttributeModifierHandle& ModifierHandle);
	void SetIsFullHp(bool bInFullHp);
	void SetHpColor(const struct FLinearColor& Color);
	void SetShieldColor(const struct FLinearColor& Color);
	void SetHpDeductColor(const struct FLinearColor& DeductColor);
	void SetParentBg(bool IsCharacter, bool IsReplay, bool IsTeammate);
	void SetTargetTreatPercentageCur(float InPercentage);
	bool ShouldShowBuff(const class FString& Tag);
	void OnTagUpdated(const struct FGameplayTag& Tag, bool TagExist);
	void SetAllExistingTags(const TArray<struct FGameplayTag>& InTags);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnComponentVisibilityChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HpBar_V3">();
	}
	static class UPyWidget_HpBar_V3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HpBar_V3>();
	}
};
static_assert(alignof(UPyWidget_HpBar_V3) == 0x000008, "Wrong alignment on UPyWidget_HpBar_V3");
static_assert(sizeof(UPyWidget_HpBar_V3) == 0x000870, "Wrong size on UPyWidget_HpBar_V3");
static_assert(offsetof(UPyWidget_HpBar_V3, IsUsedIn3D) == 0x000790, "Member 'UPyWidget_HpBar_V3::IsUsedIn3D' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar_V3, HpColor) == 0x000794, "Member 'UPyWidget_HpBar_V3::HpColor' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar_V3, BuffWidgetsPrefix) == 0x0007A8, "Member 'UPyWidget_HpBar_V3::BuffWidgetsPrefix' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar_V3, BuffWidgets) == 0x0007B8, "Member 'UPyWidget_HpBar_V3::BuffWidgets' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar_V3, BlockCueTagsMap) == 0x000808, "Member 'UPyWidget_HpBar_V3::BlockCueTagsMap' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar_V3, HpBarVxClass) == 0x000858, "Member 'UPyWidget_HpBar_V3::HpBarVxClass' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBar_V3, BreakEndedDispatcher) == 0x000860, "Member 'UPyWidget_HpBar_V3::BreakEndedDispatcher' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidgetStyle_HpBarVX
// 0x0020 (0x0058 - 0x0038)
class UPyWidgetStyle_HpBarVX final : public UPrimaryDataAsset
{
public:
	struct FLinearColor                           BaseColorAlly;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           DotAColorAlly;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidgetStyle_HpBarVX">();
	}
	static class UPyWidgetStyle_HpBarVX* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidgetStyle_HpBarVX>();
	}
};
static_assert(alignof(UPyWidgetStyle_HpBarVX) == 0x000008, "Wrong alignment on UPyWidgetStyle_HpBarVX");
static_assert(sizeof(UPyWidgetStyle_HpBarVX) == 0x000058, "Wrong size on UPyWidgetStyle_HpBarVX");
static_assert(offsetof(UPyWidgetStyle_HpBarVX, BaseColorAlly) == 0x000038, "Member 'UPyWidgetStyle_HpBarVX::BaseColorAlly' has a wrong offset!");
static_assert(offsetof(UPyWidgetStyle_HpBarVX, DotAColorAlly) == 0x000048, "Member 'UPyWidgetStyle_HpBarVX::DotAColorAlly' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidget_HpBarVX_V3
// 0x0068 (0x0620 - 0x05B8)
class UPyWidget_HpBarVX_V3 : public UWidget_HpBar_VX
{
public:
	struct FSlateColor                            BaseColorAlly;                                     // 0x05B8(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSlateColor                            BaseColorEnemy;                                    // 0x05CC(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     PointerMaterial;                                   // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     PointerMaterial_3D;                                // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     PointerParticleMaterial1;                          // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     PointerParticleMaterial1_3D;                       // 0x05F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     PointerParticleMaterial2;                          // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     PointerParticleMaterial2_3D;                       // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPyWidgetStyle_HpBarVX*                 WidgetStyle;                                       // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReleaseTime;                                       // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Destruct();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void OnParentVisibilityChanged(ESlateVisibility InVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_HpBarVX_V3">();
	}
	static class UPyWidget_HpBarVX_V3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_HpBarVX_V3>();
	}
};
static_assert(alignof(UPyWidget_HpBarVX_V3) == 0x000008, "Wrong alignment on UPyWidget_HpBarVX_V3");
static_assert(sizeof(UPyWidget_HpBarVX_V3) == 0x000620, "Wrong size on UPyWidget_HpBarVX_V3");
static_assert(offsetof(UPyWidget_HpBarVX_V3, BaseColorAlly) == 0x0005B8, "Member 'UPyWidget_HpBarVX_V3::BaseColorAlly' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, BaseColorEnemy) == 0x0005CC, "Member 'UPyWidget_HpBarVX_V3::BaseColorEnemy' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, PointerMaterial) == 0x0005E0, "Member 'UPyWidget_HpBarVX_V3::PointerMaterial' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, PointerMaterial_3D) == 0x0005E8, "Member 'UPyWidget_HpBarVX_V3::PointerMaterial_3D' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, PointerParticleMaterial1) == 0x0005F0, "Member 'UPyWidget_HpBarVX_V3::PointerParticleMaterial1' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, PointerParticleMaterial1_3D) == 0x0005F8, "Member 'UPyWidget_HpBarVX_V3::PointerParticleMaterial1_3D' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, PointerParticleMaterial2) == 0x000600, "Member 'UPyWidget_HpBarVX_V3::PointerParticleMaterial2' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, PointerParticleMaterial2_3D) == 0x000608, "Member 'UPyWidget_HpBarVX_V3::PointerParticleMaterial2_3D' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, WidgetStyle) == 0x000610, "Member 'UPyWidget_HpBarVX_V3::WidgetStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_HpBarVX_V3, ReleaseTime) == 0x000618, "Member 'UPyWidget_HpBarVX_V3::ReleaseTime' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidget_BattleHpBar_V3
// 0x00A8 (0x0680 - 0x05D8)
class UPyWidget_BattleHpBar_V3 : public UWidget_ViewTargetHpBar
{
public:
	TMap<struct FGameplayTag, struct FSlateBrush> CueTagIconsMap;                                    // 0x05D8(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FGameplayTag> BlockCueTagsMap;                                   // 0x0628(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                         CustomColorPreview_Health;                         // 0x0678(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CustomColorPreview_Shield;                         // 0x067C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	bool ShouldBeVisible();
	void SetTargetActor(class AActor* InActor);
	void OnMovementModeChanged(class ACharacter* Char, EMovementMode PreMode, uint8 PreviousCustomMove);
	void OnTakeDamage(class AActor* Source, class AActor* Dest, const struct FAttributeModifierHandle& Parm);
	void OnSpecialVXPlay(EMarvelAbilityUIHudAnim ShakeMode);
	void SetTotalHpMax(float InTotalHpMax);
	void SetTotalHpCur(float InTotalHpCur);
	void SetTargetTreatPercentageCur(float InPercentage);
	bool ShouldShowBuff(const class FString& Tag);
	void OnTagUpdated(const struct FGameplayTag& Tag, bool TagExist);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_BattleHpBar_V3">();
	}
	static class UPyWidget_BattleHpBar_V3* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_BattleHpBar_V3>();
	}
};
static_assert(alignof(UPyWidget_BattleHpBar_V3) == 0x000008, "Wrong alignment on UPyWidget_BattleHpBar_V3");
static_assert(sizeof(UPyWidget_BattleHpBar_V3) == 0x000680, "Wrong size on UPyWidget_BattleHpBar_V3");
static_assert(offsetof(UPyWidget_BattleHpBar_V3, CueTagIconsMap) == 0x0005D8, "Member 'UPyWidget_BattleHpBar_V3::CueTagIconsMap' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattleHpBar_V3, BlockCueTagsMap) == 0x000628, "Member 'UPyWidget_BattleHpBar_V3::BlockCueTagsMap' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattleHpBar_V3, CustomColorPreview_Health) == 0x000678, "Member 'UPyWidget_BattleHpBar_V3::CustomColorPreview_Health' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattleHpBar_V3, CustomColorPreview_Shield) == 0x00067C, "Member 'UPyWidget_BattleHpBar_V3::CustomColorPreview_Shield' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidget_ScreenFXBase
// 0x0038 (0x03F0 - 0x03B8)
class UPyWidget_ScreenFXBase : public UUserWidget
{
public:
	struct FGameplayTag                           CueTag;                                            // 0x03B8(0x000C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       Anim_Loop;                                         // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_FadeIn;                                       // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_FadeOut;                                      // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_FadeOutForInstant;                            // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NeedFadeOutForInstant;                             // 0x03E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InstantBuffDuration;                               // 0x03EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Construct();
	void SetBuffExistence(bool bInExist);
	void OnFinishFadeIn();
	void OnFinishFadeOut();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_ScreenFXBase">();
	}
	static class UPyWidget_ScreenFXBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_ScreenFXBase>();
	}
};
static_assert(alignof(UPyWidget_ScreenFXBase) == 0x000008, "Wrong alignment on UPyWidget_ScreenFXBase");
static_assert(sizeof(UPyWidget_ScreenFXBase) == 0x0003F0, "Wrong size on UPyWidget_ScreenFXBase");
static_assert(offsetof(UPyWidget_ScreenFXBase, CueTag) == 0x0003B8, "Member 'UPyWidget_ScreenFXBase::CueTag' has a wrong offset!");
static_assert(offsetof(UPyWidget_ScreenFXBase, Anim_Loop) == 0x0003C8, "Member 'UPyWidget_ScreenFXBase::Anim_Loop' has a wrong offset!");
static_assert(offsetof(UPyWidget_ScreenFXBase, Anim_FadeIn) == 0x0003D0, "Member 'UPyWidget_ScreenFXBase::Anim_FadeIn' has a wrong offset!");
static_assert(offsetof(UPyWidget_ScreenFXBase, Anim_FadeOut) == 0x0003D8, "Member 'UPyWidget_ScreenFXBase::Anim_FadeOut' has a wrong offset!");
static_assert(offsetof(UPyWidget_ScreenFXBase, Anim_FadeOutForInstant) == 0x0003E0, "Member 'UPyWidget_ScreenFXBase::Anim_FadeOutForInstant' has a wrong offset!");
static_assert(offsetof(UPyWidget_ScreenFXBase, NeedFadeOutForInstant) == 0x0003E8, "Member 'UPyWidget_ScreenFXBase::NeedFadeOutForInstant' has a wrong offset!");
static_assert(offsetof(UPyWidget_ScreenFXBase, InstantBuffDuration) == 0x0003EC, "Member 'UPyWidget_ScreenFXBase::InstantBuffDuration' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidget_ScreenFXHealing
// 0x0008 (0x03F8 - 0x03F0)
class UPyWidget_ScreenFXHealing final : public UPyWidget_ScreenFXBase
{
public:
	class UWidgetAnimation*                       Anim_RestoreMax;                                   // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Destruct();
	void SetBuffExistence(bool bInExist);
	void OnTagUpdated(const struct FGameplayTag& Tag, bool TagExist);
	void OnFinishFadeIn();
	void OnFinishRestoreMax();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_ScreenFXHealing">();
	}
	static class UPyWidget_ScreenFXHealing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_ScreenFXHealing>();
	}
};
static_assert(alignof(UPyWidget_ScreenFXHealing) == 0x000008, "Wrong alignment on UPyWidget_ScreenFXHealing");
static_assert(sizeof(UPyWidget_ScreenFXHealing) == 0x0003F8, "Wrong size on UPyWidget_ScreenFXHealing");
static_assert(offsetof(UPyWidget_ScreenFXHealing, Anim_RestoreMax) == 0x0003F0, "Member 'UPyWidget_ScreenFXHealing::Anim_RestoreMax' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidget_DyingScreenFX
// 0x0010 (0x05E8 - 0x05D8)
class UPyWidget_DyingScreenFX final : public UWidget_HurtHintPanel
{
public:
	float                                         DyingEffectCD;                                     // 0x05D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5DC[0x4];                                      // 0x05DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CameraMaterial;                                    // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	bool ShouldBeVisible();
	void SetTargetCharacter(class AMarvelBaseCharacter* InCharacter);
	void SetDying(bool InDying);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_DyingScreenFX">();
	}
	static class UPyWidget_DyingScreenFX* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_DyingScreenFX>();
	}
};
static_assert(alignof(UPyWidget_DyingScreenFX) == 0x000008, "Wrong alignment on UPyWidget_DyingScreenFX");
static_assert(sizeof(UPyWidget_DyingScreenFX) == 0x0005E8, "Wrong size on UPyWidget_DyingScreenFX");
static_assert(offsetof(UPyWidget_DyingScreenFX, DyingEffectCD) == 0x0005D8, "Member 'UPyWidget_DyingScreenFX::DyingEffectCD' has a wrong offset!");
static_assert(offsetof(UPyWidget_DyingScreenFX, CameraMaterial) == 0x0005E0, "Member 'UPyWidget_DyingScreenFX::CameraMaterial' has a wrong offset!");

// PythonClass PyWidget_HpBar.PyWidget_CharacterInfo
// 0x0000 (0x1970 - 0x1970)
class UPyWidget_CharacterInfo final : public UWidget_CharacterInfo
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_CharacterInfo">();
	}
	static class UPyWidget_CharacterInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_CharacterInfo>();
	}
};
static_assert(alignof(UPyWidget_CharacterInfo) == 0x000010, "Wrong alignment on UPyWidget_CharacterInfo");
static_assert(sizeof(UPyWidget_CharacterInfo) == 0x001970, "Wrong size on UPyWidget_CharacterInfo");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_Squad_MatchPanel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Marvel_structs.hpp"
#include "InputCore_structs.hpp"
#include "PyWidget_Common_Button_classes.hpp"
#include "PyMarvelUserWidget_classes.hpp"
#include "Engine_structs.hpp"
#include "PyWidget_CommonCheckBox_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_WarningTips
// 0x0020 (0x0608 - 0x05E8)
class UPyWidget_Squad_WarningTips : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Text_Prompt_Tip;                                   // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            Text_Prompt_Tip_Color;                             // 0x05F0(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_WarningTips">();
	}
	static class UPyWidget_Squad_WarningTips* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_WarningTips>();
	}
};
static_assert(alignof(UPyWidget_Squad_WarningTips) == 0x000008, "Wrong alignment on UPyWidget_Squad_WarningTips");
static_assert(sizeof(UPyWidget_Squad_WarningTips) == 0x000608, "Wrong size on UPyWidget_Squad_WarningTips");
static_assert(offsetof(UPyWidget_Squad_WarningTips, Text_Prompt_Tip) == 0x0005E8, "Member 'UPyWidget_Squad_WarningTips::Text_Prompt_Tip' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_WarningTips, Text_Prompt_Tip_Color) == 0x0005F0, "Member 'UPyWidget_Squad_WarningTips::Text_Prompt_Tip_Color' has a wrong offset!");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchPanel
// 0x01A8 (0x0790 - 0x05E8)
class UPyWidget_Squad_MatchPanel : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuideTipsStyle>                SelectGuideTipsStyles;                             // 0x05E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UWidget*                                WBP_Squad_StartGameBtn;                            // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                WBP_Squad_Tips;                                    // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                CanvasPanel_Hover;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Hover_FadeIn;                                 // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Hover_Loop;                                   // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Mode_FadeIn;                                  // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Match_Start;                                  // 0x0628(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Match_Cancel;                                 // 0x0630(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Normal;                                      // 0x0638(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Warning;                                     // 0x064C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGuideTipsStyle                        TestGuideTipsStyle;                                // 0x0660(0x0110)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FKey                                   RuleKey_Gamepad;                                   // 0x0770(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void MarvelSetVisible(bool Visible);
	void OnReceiveInputKey(const struct FKey& InKey, const EInputEvent EventType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_MatchPanel">();
	}
	static class UPyWidget_Squad_MatchPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_MatchPanel>();
	}
};
static_assert(alignof(UPyWidget_Squad_MatchPanel) == 0x000008, "Wrong alignment on UPyWidget_Squad_MatchPanel");
static_assert(sizeof(UPyWidget_Squad_MatchPanel) == 0x000790, "Wrong size on UPyWidget_Squad_MatchPanel");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, SelectGuideTipsStyles) == 0x0005E8, "Member 'UPyWidget_Squad_MatchPanel::SelectGuideTipsStyles' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, WBP_Squad_StartGameBtn) == 0x0005F8, "Member 'UPyWidget_Squad_MatchPanel::WBP_Squad_StartGameBtn' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, WBP_Squad_Tips) == 0x000600, "Member 'UPyWidget_Squad_MatchPanel::WBP_Squad_Tips' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, CanvasPanel_Hover) == 0x000608, "Member 'UPyWidget_Squad_MatchPanel::CanvasPanel_Hover' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, Anim_Hover_FadeIn) == 0x000610, "Member 'UPyWidget_Squad_MatchPanel::Anim_Hover_FadeIn' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, Anim_Hover_Loop) == 0x000618, "Member 'UPyWidget_Squad_MatchPanel::Anim_Hover_Loop' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, Anim_Mode_FadeIn) == 0x000620, "Member 'UPyWidget_Squad_MatchPanel::Anim_Mode_FadeIn' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, Anim_Match_Start) == 0x000628, "Member 'UPyWidget_Squad_MatchPanel::Anim_Match_Start' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, Anim_Match_Cancel) == 0x000630, "Member 'UPyWidget_Squad_MatchPanel::Anim_Match_Cancel' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, Color_Normal) == 0x000638, "Member 'UPyWidget_Squad_MatchPanel::Color_Normal' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, Color_Warning) == 0x00064C, "Member 'UPyWidget_Squad_MatchPanel::Color_Warning' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, TestGuideTipsStyle) == 0x000660, "Member 'UPyWidget_Squad_MatchPanel::TestGuideTipsStyle' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchPanel, RuleKey_Gamepad) == 0x000770, "Member 'UPyWidget_Squad_MatchPanel::RuleKey_Gamepad' has a wrong offset!");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_RecommendAIDifficulty
// 0x0010 (0x08F0 - 0x08E0)
class UPyWidget_Squad_RecommendAIDifficulty final : public UPyWidget_CommonButton_Lv4
{
public:
	int32                                         AIDiff;                                            // 0x08D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8DC[0x4];                                      // 0x08DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             AIDiffChange;                                      // 0x08E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void AIDiffChange__DelegateSignature(int32 Ai_diff);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_RecommendAIDifficulty">();
	}
	static class UPyWidget_Squad_RecommendAIDifficulty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_RecommendAIDifficulty>();
	}
};
static_assert(alignof(UPyWidget_Squad_RecommendAIDifficulty) == 0x000010, "Wrong alignment on UPyWidget_Squad_RecommendAIDifficulty");
static_assert(sizeof(UPyWidget_Squad_RecommendAIDifficulty) == 0x0008F0, "Wrong size on UPyWidget_Squad_RecommendAIDifficulty");
static_assert(offsetof(UPyWidget_Squad_RecommendAIDifficulty, AIDiff) == 0x0008D8, "Member 'UPyWidget_Squad_RecommendAIDifficulty::AIDiff' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_RecommendAIDifficulty, AIDiffChange) == 0x0008E0, "Member 'UPyWidget_Squad_RecommendAIDifficulty::AIDiffChange' has a wrong offset!");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchInfo_Card
// 0x0068 (0x0650 - 0x05E8)
class UPyWidget_Squad_MatchInfo_Card : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Text_Match;                                        // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Text_Estimated_Time;                               // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Text_Match_Time;                                   // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                CanvasPanel_Press;                                 // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Cancel;                                       // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Success;                                      // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_NormalToHover;                                // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_HoverToNormal;                                // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   RuleKey_Gamepad;                                   // 0x0628(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Text_SkewAmount;                                   // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void Notify_PlayMatchSucessAnim();
	void MarvelSetVisibleImmediately(bool bTmpVisible);
	void MarvelSetVisible(bool Visible);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_MatchInfo_Card">();
	}
	static class UPyWidget_Squad_MatchInfo_Card* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_MatchInfo_Card>();
	}
};
static_assert(alignof(UPyWidget_Squad_MatchInfo_Card) == 0x000008, "Wrong alignment on UPyWidget_Squad_MatchInfo_Card");
static_assert(sizeof(UPyWidget_Squad_MatchInfo_Card) == 0x000650, "Wrong size on UPyWidget_Squad_MatchInfo_Card");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, Text_Match) == 0x0005E8, "Member 'UPyWidget_Squad_MatchInfo_Card::Text_Match' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, Text_Estimated_Time) == 0x0005F0, "Member 'UPyWidget_Squad_MatchInfo_Card::Text_Estimated_Time' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, Text_Match_Time) == 0x0005F8, "Member 'UPyWidget_Squad_MatchInfo_Card::Text_Match_Time' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, CanvasPanel_Press) == 0x000600, "Member 'UPyWidget_Squad_MatchInfo_Card::CanvasPanel_Press' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, Anim_Cancel) == 0x000608, "Member 'UPyWidget_Squad_MatchInfo_Card::Anim_Cancel' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, Anim_Success) == 0x000610, "Member 'UPyWidget_Squad_MatchInfo_Card::Anim_Success' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, Anim_NormalToHover) == 0x000618, "Member 'UPyWidget_Squad_MatchInfo_Card::Anim_NormalToHover' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, Anim_HoverToNormal) == 0x000620, "Member 'UPyWidget_Squad_MatchInfo_Card::Anim_HoverToNormal' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, RuleKey_Gamepad) == 0x000628, "Member 'UPyWidget_Squad_MatchInfo_Card::RuleKey_Gamepad' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo_Card, Text_SkewAmount) == 0x000648, "Member 'UPyWidget_Squad_MatchInfo_Card::Text_SkewAmount' has a wrong offset!");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_ModeSelectionBtn
// 0x0090 (0x0678 - 0x05E8)
class UPyWidget_Squad_ModeSelectionBtn : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuideTipsStyle>                SelectGuideTipsStyles;                             // 0x05E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Normal;                                      // 0x05F8(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                            Color_Warning;                                     // 0x060C(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UWidget*                                Btn_Mode_Switch;                                   // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                RichText_Mode_Name;                                // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                HBox_Team_Number;                                  // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Img_Team_Icon;                                     // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Text_Headcount_Min;                                // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Text_TeamNum_Symbol;                               // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Text_Headcount_Max;                                // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   RuleKey_Gamepad;                                   // 0x0658(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void OnReceiveInputKey(const struct FKey& InKey, const EInputEvent EventType);
	void OnSoftTextureLoad(class UObject* Texture);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_ModeSelectionBtn">();
	}
	static class UPyWidget_Squad_ModeSelectionBtn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_ModeSelectionBtn>();
	}
};
static_assert(alignof(UPyWidget_Squad_ModeSelectionBtn) == 0x000008, "Wrong alignment on UPyWidget_Squad_ModeSelectionBtn");
static_assert(sizeof(UPyWidget_Squad_ModeSelectionBtn) == 0x000678, "Wrong size on UPyWidget_Squad_ModeSelectionBtn");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, SelectGuideTipsStyles) == 0x0005E8, "Member 'UPyWidget_Squad_ModeSelectionBtn::SelectGuideTipsStyles' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, Color_Normal) == 0x0005F8, "Member 'UPyWidget_Squad_ModeSelectionBtn::Color_Normal' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, Color_Warning) == 0x00060C, "Member 'UPyWidget_Squad_ModeSelectionBtn::Color_Warning' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, Btn_Mode_Switch) == 0x000620, "Member 'UPyWidget_Squad_ModeSelectionBtn::Btn_Mode_Switch' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, RichText_Mode_Name) == 0x000628, "Member 'UPyWidget_Squad_ModeSelectionBtn::RichText_Mode_Name' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, HBox_Team_Number) == 0x000630, "Member 'UPyWidget_Squad_ModeSelectionBtn::HBox_Team_Number' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, Img_Team_Icon) == 0x000638, "Member 'UPyWidget_Squad_ModeSelectionBtn::Img_Team_Icon' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, Text_Headcount_Min) == 0x000640, "Member 'UPyWidget_Squad_ModeSelectionBtn::Text_Headcount_Min' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, Text_TeamNum_Symbol) == 0x000648, "Member 'UPyWidget_Squad_ModeSelectionBtn::Text_TeamNum_Symbol' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, Text_Headcount_Max) == 0x000650, "Member 'UPyWidget_Squad_ModeSelectionBtn::Text_Headcount_Max' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_ModeSelectionBtn, RuleKey_Gamepad) == 0x000658, "Member 'UPyWidget_Squad_ModeSelectionBtn::RuleKey_Gamepad' has a wrong offset!");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_MatchInfo
// 0x0078 (0x0660 - 0x05E8)
class UPyWidget_Squad_MatchInfo : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Btn_Cancel;                                        // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Text_Match;                                        // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Text_Estimated_Time;                               // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                Text_Match_Time;                                   // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                CanvasPanel_Press;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Cancel;                                       // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Success;                                      // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Press;                                        // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsLeagueMatch;                                     // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color_Btn_Cancel_Normal;                           // 0x062C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color_Btn_Cancel_Hover;                            // 0x063C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color_Btn_Cancel_Click;                            // 0x064C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void Notify_PlayMatchSucessAnim();
	void MarvelSetVisibleImmediately(bool bTmpVisible);
	void MarvelSetVisible(bool Visible);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_MatchInfo">();
	}
	static class UPyWidget_Squad_MatchInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_MatchInfo>();
	}
};
static_assert(alignof(UPyWidget_Squad_MatchInfo) == 0x000008, "Wrong alignment on UPyWidget_Squad_MatchInfo");
static_assert(sizeof(UPyWidget_Squad_MatchInfo) == 0x000660, "Wrong size on UPyWidget_Squad_MatchInfo");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Btn_Cancel) == 0x0005E8, "Member 'UPyWidget_Squad_MatchInfo::Btn_Cancel' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Text_Match) == 0x0005F0, "Member 'UPyWidget_Squad_MatchInfo::Text_Match' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Text_Estimated_Time) == 0x0005F8, "Member 'UPyWidget_Squad_MatchInfo::Text_Estimated_Time' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Text_Match_Time) == 0x000600, "Member 'UPyWidget_Squad_MatchInfo::Text_Match_Time' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, CanvasPanel_Press) == 0x000608, "Member 'UPyWidget_Squad_MatchInfo::CanvasPanel_Press' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Anim_Cancel) == 0x000610, "Member 'UPyWidget_Squad_MatchInfo::Anim_Cancel' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Anim_Success) == 0x000618, "Member 'UPyWidget_Squad_MatchInfo::Anim_Success' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Anim_Press) == 0x000620, "Member 'UPyWidget_Squad_MatchInfo::Anim_Press' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, IsLeagueMatch) == 0x000628, "Member 'UPyWidget_Squad_MatchInfo::IsLeagueMatch' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Color_Btn_Cancel_Normal) == 0x00062C, "Member 'UPyWidget_Squad_MatchInfo::Color_Btn_Cancel_Normal' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Color_Btn_Cancel_Hover) == 0x00063C, "Member 'UPyWidget_Squad_MatchInfo::Color_Btn_Cancel_Hover' has a wrong offset!");
static_assert(offsetof(UPyWidget_Squad_MatchInfo, Color_Btn_Cancel_Click) == 0x00064C, "Member 'UPyWidget_Squad_MatchInfo::Color_Btn_Cancel_Click' has a wrong offset!");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_ConsoleOnly
// 0x0000 (0x05E8 - 0x05E8)
class UPyWidget_Squad_ConsoleOnly : public UPyMarvelUserWidget
{
public:
	void OnInitialized();
	void Construct();
	void Destruct();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_ConsoleOnly">();
	}
	static class UPyWidget_Squad_ConsoleOnly* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_ConsoleOnly>();
	}
};
static_assert(alignof(UPyWidget_Squad_ConsoleOnly) == 0x000008, "Wrong alignment on UPyWidget_Squad_ConsoleOnly");
static_assert(sizeof(UPyWidget_Squad_ConsoleOnly) == 0x0005E8, "Wrong size on UPyWidget_Squad_ConsoleOnly");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_ModeSelectionBtn_RankScoreBar
// 0x0000 (0x05E8 - 0x05E8)
class UPyWidget_Squad_ModeSelectionBtn_RankScoreBar : public UPyMarvelUserWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_ModeSelectionBtn_RankScoreBar">();
	}
	static class UPyWidget_Squad_ModeSelectionBtn_RankScoreBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_ModeSelectionBtn_RankScoreBar>();
	}
};
static_assert(alignof(UPyWidget_Squad_ModeSelectionBtn_RankScoreBar) == 0x000008, "Wrong alignment on UPyWidget_Squad_ModeSelectionBtn_RankScoreBar");
static_assert(sizeof(UPyWidget_Squad_ModeSelectionBtn_RankScoreBar) == 0x0005E8, "Wrong size on UPyWidget_Squad_ModeSelectionBtn_RankScoreBar");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_ConsoleCheckBox
// 0x0000 (0x0840 - 0x0840)
class UPyWidget_ConsoleCheckBox : public UPyWidget_CommonCheckBox
{
public:
	void SetIsHover(bool IsHover_0);
	void SetBtnIsPressed(bool IsBtnPressed_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_ConsoleCheckBox">();
	}
	static class UPyWidget_ConsoleCheckBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_ConsoleCheckBox>();
	}
};
static_assert(alignof(UPyWidget_ConsoleCheckBox) == 0x000008, "Wrong alignment on UPyWidget_ConsoleCheckBox");
static_assert(sizeof(UPyWidget_ConsoleCheckBox) == 0x000840, "Wrong size on UPyWidget_ConsoleCheckBox");

// PythonClass PyWidget_Squad_MatchPanel.PyWidget_Squad_League_Team
// 0x0010 (0x05F8 - 0x05E8)
class UPyWidget_Squad_League_Team : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x3];                                      // 0x05E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Mini_Name_Color;                                   // 0x05E4(0x0014)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void MarvelSetVisibleImmediately(bool bTmpVisible);
	void MarvelSetVisible(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_Squad_League_Team">();
	}
	static class UPyWidget_Squad_League_Team* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_Squad_League_Team>();
	}
};
static_assert(alignof(UPyWidget_Squad_League_Team) == 0x000008, "Wrong alignment on UPyWidget_Squad_League_Team");
static_assert(sizeof(UPyWidget_Squad_League_Team) == 0x0005F8, "Wrong size on UPyWidget_Squad_League_Team");
static_assert(offsetof(UPyWidget_Squad_League_Team, Mini_Name_Color) == 0x0005E4, "Member 'UPyWidget_Squad_League_Team::Mini_Name_Color' has a wrong offset!");

}


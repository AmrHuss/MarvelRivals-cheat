#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: One033001_HoverToFull_LightBP

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass 1033001_HoverToFull_LightBP.1033001_HoverToFull_LightBP_C
// 0x0078 (0x04E8 - 0x0470)
class AOne033001_HoverToFull_LightBP_C final : public AActor
{
public:
	class UPointLightComponent*                   Hair02;                                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Hair01;                                            // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   GUN01;                                             // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Fill_Light2;                                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   GUN02;                                             // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   ARM02;                                             // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   ARM01;                                             // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             Main_Light1;                                       // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             Rim_Light_04;                                      // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   back1;                                             // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight2;                                       // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Fill_Light1;                                       // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Head01;                                            // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             Rim_Light_03;                                      // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"1033001_HoverToFull_LightBP_C">();
	}
	static class AOne033001_HoverToFull_LightBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AOne033001_HoverToFull_LightBP_C>();
	}
};
static_assert(alignof(AOne033001_HoverToFull_LightBP_C) == 0x000008, "Wrong alignment on AOne033001_HoverToFull_LightBP_C");
static_assert(sizeof(AOne033001_HoverToFull_LightBP_C) == 0x0004E8, "Wrong size on AOne033001_HoverToFull_LightBP_C");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, Hair02) == 0x000470, "Member 'AOne033001_HoverToFull_LightBP_C::Hair02' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, Hair01) == 0x000478, "Member 'AOne033001_HoverToFull_LightBP_C::Hair01' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, GUN01) == 0x000480, "Member 'AOne033001_HoverToFull_LightBP_C::GUN01' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, Fill_Light2) == 0x000488, "Member 'AOne033001_HoverToFull_LightBP_C::Fill_Light2' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, GUN02) == 0x000490, "Member 'AOne033001_HoverToFull_LightBP_C::GUN02' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, ARM02) == 0x000498, "Member 'AOne033001_HoverToFull_LightBP_C::ARM02' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, ARM01) == 0x0004A0, "Member 'AOne033001_HoverToFull_LightBP_C::ARM01' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, Main_Light1) == 0x0004A8, "Member 'AOne033001_HoverToFull_LightBP_C::Main_Light1' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, Rim_Light_04) == 0x0004B0, "Member 'AOne033001_HoverToFull_LightBP_C::Rim_Light_04' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, back1) == 0x0004B8, "Member 'AOne033001_HoverToFull_LightBP_C::back1' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, PointLight2) == 0x0004C0, "Member 'AOne033001_HoverToFull_LightBP_C::PointLight2' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, Fill_Light1) == 0x0004C8, "Member 'AOne033001_HoverToFull_LightBP_C::Fill_Light1' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, Head01) == 0x0004D0, "Member 'AOne033001_HoverToFull_LightBP_C::Head01' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, Rim_Light_03) == 0x0004D8, "Member 'AOne033001_HoverToFull_LightBP_C::Rim_Light_03' has a wrong offset!");
static_assert(offsetof(AOne033001_HoverToFull_LightBP_C, DefaultSceneRoot) == 0x0004E0, "Member 'AOne033001_HoverToFull_LightBP_C::DefaultSceneRoot' has a wrong offset!");

}


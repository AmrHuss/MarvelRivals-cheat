#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyBirthDoor

#include "Basic.hpp"

#include "Marvel_structs.hpp"
#include "Marvel_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// PythonClass PyBirthDoor.PyBirthDoor
// 0x0020 (0x04A0 - 0x0480)
class APyBirthDoor final : public ABirthDoor
{
public:
	class AActor*                                 BirthBase;                                         // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBattleSide                                   BattleSide;                                        // 0x0488(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          RebirthLoopEvent;                                  // 0x0490(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                          BlockLoopEvent;                                    // 0x0498(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnViewTargetChange();
	void K2_OnReset();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyBirthDoor">();
	}
	static class APyBirthDoor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyBirthDoor>();
	}
};
static_assert(alignof(APyBirthDoor) == 0x000008, "Wrong alignment on APyBirthDoor");
static_assert(sizeof(APyBirthDoor) == 0x0004A0, "Wrong size on APyBirthDoor");
static_assert(offsetof(APyBirthDoor, BirthBase) == 0x000480, "Member 'APyBirthDoor::BirthBase' has a wrong offset!");
static_assert(offsetof(APyBirthDoor, BattleSide) == 0x000488, "Member 'APyBirthDoor::BattleSide' has a wrong offset!");
static_assert(offsetof(APyBirthDoor, RebirthLoopEvent) == 0x000490, "Member 'APyBirthDoor::RebirthLoopEvent' has a wrong offset!");
static_assert(offsetof(APyBirthDoor, BlockLoopEvent) == 0x000498, "Member 'APyBirthDoor::BlockLoopEvent' has a wrong offset!");

}


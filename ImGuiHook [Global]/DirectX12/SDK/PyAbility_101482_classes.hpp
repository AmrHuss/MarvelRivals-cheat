#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyAbility_101482

#include "Basic.hpp"

#include "Marvel_classes.hpp"
#include "Hero_1014_structs.hpp"


namespace SDK
{

// PythonClass PyAbility_101482.PyConfig_101482
// 0x0008 (0x00C0 - 0x00B8)
class UPyConfig_101482 final : public UConfig_105
{
public:
	int32                                         SlowBuffID;                                        // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyConfig_101482">();
	}
	static class UPyConfig_101482* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyConfig_101482>();
	}
};
static_assert(alignof(UPyConfig_101482) == 0x000008, "Wrong alignment on UPyConfig_101482");
static_assert(sizeof(UPyConfig_101482) == 0x0000C0, "Wrong size on UPyConfig_101482");
static_assert(offsetof(UPyConfig_101482, SlowBuffID) == 0x0000B8, "Member 'UPyConfig_101482::SlowBuffID' has a wrong offset!");

// PythonClass PyAbility_101482.PyAbility_101482
// 0x0030 (0x25C8 - 0x2598)
class UPyAbility_101482 : public UAbility_105
{
public:
	int32                                         GatlingWeaponIndex;                                // 0x2598(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParentAbilityId;                                   // 0x259C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EState_101482                                 AbilityState;                                      // 0x25A0(0x0001)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25A1[0x7];                                     // 0x25A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnBeginGunWarmUp;                                  // 0x25A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnBeginGunCoolDown;                                // 0x25B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

public:
	void BeginPlay();
	void ParentAbilityChange(EState_101481 State);
	void EndPlay();
	void K2_ActivateAbility();
	void NativeOnMontageCompleted(const class FString& Tag);
	void K2_OnEndAbility(bool Cancel);
	void TryGetCurrentWeaponAgain();
	void PostGunWarmUp();
	void PostGunCoolDown();
	void OnBeginGunWarmUp__DelegateSignature();
	void OnBeginGunCoolDown__DelegateSignature();
	void OnRep_AbilityState();
	void OnAbilityStateChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyAbility_101482">();
	}
	static class UPyAbility_101482* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyAbility_101482>();
	}
};
static_assert(alignof(UPyAbility_101482) == 0x000008, "Wrong alignment on UPyAbility_101482");
static_assert(sizeof(UPyAbility_101482) == 0x0025C8, "Wrong size on UPyAbility_101482");
static_assert(offsetof(UPyAbility_101482, GatlingWeaponIndex) == 0x002598, "Member 'UPyAbility_101482::GatlingWeaponIndex' has a wrong offset!");
static_assert(offsetof(UPyAbility_101482, ParentAbilityId) == 0x00259C, "Member 'UPyAbility_101482::ParentAbilityId' has a wrong offset!");
static_assert(offsetof(UPyAbility_101482, AbilityState) == 0x0025A0, "Member 'UPyAbility_101482::AbilityState' has a wrong offset!");
static_assert(offsetof(UPyAbility_101482, OnBeginGunWarmUp) == 0x0025A8, "Member 'UPyAbility_101482::OnBeginGunWarmUp' has a wrong offset!");
static_assert(offsetof(UPyAbility_101482, OnBeginGunCoolDown) == 0x0025B8, "Member 'UPyAbility_101482::OnBeginGunCoolDown' has a wrong offset!");

// PythonClass PyAbility_101482.PyCue_Ability_Loop_101482
// 0x0020 (0x0E20 - 0x0E00)
class APyCue_Ability_Loop_101482 final : public AMarvelCueNotify_Ability
{
public:
	class UCurveFloat*                            CurveWarmUp;                                       // 0x0E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                            CurveCoolDown;                                     // 0x0E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxIntensity;                                      // 0x0E10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GunSlot;                                           // 0x0E14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         WarmupTime;                                        // 0x0E18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CoolDownTime;                                      // 0x0E1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnBegin();
	void OnEnd();
	bool WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters);
	void OnBeginGunWarmUp();
	void OnBeginCunCoolDown();
	void ToggleGunMaterial(bool WarmUp);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyCue_Ability_Loop_101482">();
	}
	static class APyCue_Ability_Loop_101482* GetDefaultObj()
	{
		return GetDefaultObjImpl<APyCue_Ability_Loop_101482>();
	}
};
static_assert(alignof(APyCue_Ability_Loop_101482) == 0x000008, "Wrong alignment on APyCue_Ability_Loop_101482");
static_assert(sizeof(APyCue_Ability_Loop_101482) == 0x000E20, "Wrong size on APyCue_Ability_Loop_101482");
static_assert(offsetof(APyCue_Ability_Loop_101482, CurveWarmUp) == 0x000E00, "Member 'APyCue_Ability_Loop_101482::CurveWarmUp' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_101482, CurveCoolDown) == 0x000E08, "Member 'APyCue_Ability_Loop_101482::CurveCoolDown' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_101482, MaxIntensity) == 0x000E10, "Member 'APyCue_Ability_Loop_101482::MaxIntensity' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_101482, GunSlot) == 0x000E14, "Member 'APyCue_Ability_Loop_101482::GunSlot' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_101482, WarmupTime) == 0x000E18, "Member 'APyCue_Ability_Loop_101482::WarmupTime' has a wrong offset!");
static_assert(offsetof(APyCue_Ability_Loop_101482, CoolDownTime) == 0x000E1C, "Member 'APyCue_Ability_Loop_101482::CoolDownTime' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PyWidget_BattlePass_Title

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PyMarvelUserWidget_classes.hpp"


namespace SDK
{

// PythonClass PyWidget_BattlePass_Title.PyWidget_BattlePass_Title
// 0x0090 (0x0678 - 0x05E8)
class UPyWidget_BattlePass_Title : public UPyMarvelUserWidget
{
public:
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        RuleDetailsIcon;                                   // 0x05E8(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                             AdditionalTipsTextStyleSet;                        // 0x0610(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class URichTextBlockDecorator>> AdditionalTipsDecoratorClasses;                    // 0x0618(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UMarvelTextBlock*                       Text_Title;                                        // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelTextBlock*                       Text_SubTitle;                                     // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelTextBlock*                       Text_Time;                                         // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelImage*                           Img_Logo_Buy;                                      // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelImage*                           Img_Logo_NoBuy;                                    // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelButton*                          Btn_RuleDetails;                                   // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelButton*                          Btn_Advanced;                                      // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelHorizontalBox*                   HBox_Time;                                         // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMarvelOverlay*                         Overlay_Advanced;                                  // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       Anim_Up;                                           // 0x0670(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnInitialized();
	void Construct();
	void Destruct();
	void MarvelSetVisible(bool Visible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PyWidget_BattlePass_Title">();
	}
	static class UPyWidget_BattlePass_Title* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPyWidget_BattlePass_Title>();
	}
};
static_assert(alignof(UPyWidget_BattlePass_Title) == 0x000008, "Wrong alignment on UPyWidget_BattlePass_Title");
static_assert(sizeof(UPyWidget_BattlePass_Title) == 0x000678, "Wrong size on UPyWidget_BattlePass_Title");
static_assert(offsetof(UPyWidget_BattlePass_Title, RuleDetailsIcon) == 0x0005E8, "Member 'UPyWidget_BattlePass_Title::RuleDetailsIcon' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, AdditionalTipsTextStyleSet) == 0x000610, "Member 'UPyWidget_BattlePass_Title::AdditionalTipsTextStyleSet' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, AdditionalTipsDecoratorClasses) == 0x000618, "Member 'UPyWidget_BattlePass_Title::AdditionalTipsDecoratorClasses' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Text_Title) == 0x000628, "Member 'UPyWidget_BattlePass_Title::Text_Title' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Text_SubTitle) == 0x000630, "Member 'UPyWidget_BattlePass_Title::Text_SubTitle' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Text_Time) == 0x000638, "Member 'UPyWidget_BattlePass_Title::Text_Time' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Img_Logo_Buy) == 0x000640, "Member 'UPyWidget_BattlePass_Title::Img_Logo_Buy' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Img_Logo_NoBuy) == 0x000648, "Member 'UPyWidget_BattlePass_Title::Img_Logo_NoBuy' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Btn_RuleDetails) == 0x000650, "Member 'UPyWidget_BattlePass_Title::Btn_RuleDetails' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Btn_Advanced) == 0x000658, "Member 'UPyWidget_BattlePass_Title::Btn_Advanced' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, HBox_Time) == 0x000660, "Member 'UPyWidget_BattlePass_Title::HBox_Time' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Overlay_Advanced) == 0x000668, "Member 'UPyWidget_BattlePass_Title::Overlay_Advanced' has a wrong offset!");
static_assert(offsetof(UPyWidget_BattlePass_Title, Anim_Up) == 0x000670, "Member 'UPyWidget_BattlePass_Title::Anim_Up' has a wrong offset!");

}

